{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Project CLOUD Documentation This site is the documentation for Project CLOUD, a project aiming to create a private cloud for use by computer science students at Columbus State University. Documentation TODOs Structure site directory Format specs document Fix formatting for all documents (Specifics in TOC todo) Link documents in Table of Contents Set up GitHub Action for deploying site Finish writing stuff (specifics in TOC todo) Documentation Scope The documentation hosted here will cover only the engineering/deployment of the cloud. Other documents created over the course of development, such as Agile reports or assigned papers, are available through the CDG Teams group. Potentially, information from Agile reports could be condensed into a page or two for future reference here. I personally don't have time for that. Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project CLOUD Documentation"},{"location":"#project-cloud-documentation","text":"This site is the documentation for Project CLOUD, a project aiming to create a private cloud for use by computer science students at Columbus State University.","title":"Project CLOUD Documentation"},{"location":"#documentation-todos","text":"Structure site directory Format specs document Fix formatting for all documents (Specifics in TOC todo) Link documents in Table of Contents Set up GitHub Action for deploying site Finish writing stuff (specifics in TOC todo)","title":"Documentation TODOs"},{"location":"#documentation-scope","text":"The documentation hosted here will cover only the engineering/deployment of the cloud. Other documents created over the course of development, such as Agile reports or assigned papers, are available through the CDG Teams group. Potentially, information from Agile reports could be condensed into a page or two for future reference here. I personally don't have time for that.","title":"Documentation Scope"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"DevStackInstallation/","text":"Installing DevStack Objectives Use DevStack to install OpenStack Successfully interact with OpenStack via CLI Successfully interact with OpenStack via Horizon Web UI Notes and other details blah Background DevStack is a set of scripts which can be used to quickly set up an OpenStack environment. A DevStack-based environment is used for testing and development and should not be your final cloud\u2019s basis. DevStack is very useful for testing to see whether your hardware can run OpenStack. Note that, like the rest of this project, a good understanding of Linux will be invaluable for saving you time, effort, and confusion. https://linuxupskillchallenge.com/ looks like a useful resource for the knowledge you\u2019ll need here. Set up an Ubuntu Server VM and mess with it. The information in this document is heavily referenced from the official DevStack installation guide: https://docs.openstack.org/devstack/latest/index.html Prerequisites Fresh Ubuntu Server 24.04 installation Internet connection for server Installation Setup First we\u2019ll add a stack user to run DevStack. The following commands will create the user, give it executable permissions in all cases, and add it to the list of sudoers. $ sudo useradd \u2013s /bin/bash -d /opt/stack -m stack $ sudo chmod +x /opt/stack $ echo \"stack ALL=(ALL) NOPASSWD: ALL\" | sudo tee /etc/sudoers.d/stack $ sudo -u stack \u2013i Next, we\u2019ll download DevStack by cloning its Git repository. $ git clone https://opendev.org/openstack/devstack $ cd devstack Create a local.conf Passwords for the OpenStack installation are stored in the file local.conf. Open the file with your text editor of choice: $ nano local.conf Enter the following in the file: [[local|localrc]] ADMIN_PASSWORD=secret DATABASE_PASSWORD=$ADMIN_PASSWORD RABBIT_PASSWORD=$ADMIN_PASSWORD SERVICE_PASSWORD=$ADMIN_PASSWORD Change \u2018secret\u2019 in the configuration above to the alphanumeric password of choice. We used 0990. You should use something more secure. Start the install Now, you should be ready to install DevStack. You should still be in \\~/devstack. If not, get there. Run the following to start the DevStack scripts: $ ./stack.sh DevStack will install without further input. Their documentation claims this will take 15-30 minutes. In our experience, the installation could easily take around an hour. Use that time to read up on Linux commands, touch grass, or call your mom. Verification At last, DevStack has executed every last script, and you\u2019ve been handed back control of the server. Time to see if it worked. First, check if OpenStack is up and running. You will still need to be in the devstack directory. $ source openrc admin admin $ openstack user list $ openstack image list $ openstack server list $ openstack service list $ openstack network list Accessing Dashboard Now, we\u2019ll go to Horizon and try setting up an instance. Enter the server\u2019s IP address in your browser. This should bring you to an OpenStack login page. User: admin or demo Password: secret defined in local.conf file earlier Finished","title":"Installing DevStack"},{"location":"DevStackInstallation/#installing-devstack","text":"","title":"Installing DevStack"},{"location":"DevStackInstallation/#objectives","text":"Use DevStack to install OpenStack Successfully interact with OpenStack via CLI Successfully interact with OpenStack via Horizon Web UI Notes and other details blah","title":"Objectives"},{"location":"DevStackInstallation/#background","text":"DevStack is a set of scripts which can be used to quickly set up an OpenStack environment. A DevStack-based environment is used for testing and development and should not be your final cloud\u2019s basis. DevStack is very useful for testing to see whether your hardware can run OpenStack. Note that, like the rest of this project, a good understanding of Linux will be invaluable for saving you time, effort, and confusion. https://linuxupskillchallenge.com/ looks like a useful resource for the knowledge you\u2019ll need here. Set up an Ubuntu Server VM and mess with it. The information in this document is heavily referenced from the official DevStack installation guide: https://docs.openstack.org/devstack/latest/index.html","title":"Background"},{"location":"DevStackInstallation/#prerequisites","text":"Fresh Ubuntu Server 24.04 installation Internet connection for server","title":"Prerequisites"},{"location":"DevStackInstallation/#installation","text":"","title":"Installation"},{"location":"DevStackInstallation/#setup","text":"First we\u2019ll add a stack user to run DevStack. The following commands will create the user, give it executable permissions in all cases, and add it to the list of sudoers. $ sudo useradd \u2013s /bin/bash -d /opt/stack -m stack $ sudo chmod +x /opt/stack $ echo \"stack ALL=(ALL) NOPASSWD: ALL\" | sudo tee /etc/sudoers.d/stack $ sudo -u stack \u2013i Next, we\u2019ll download DevStack by cloning its Git repository. $ git clone https://opendev.org/openstack/devstack $ cd devstack","title":"Setup"},{"location":"DevStackInstallation/#create-a-localconf","text":"Passwords for the OpenStack installation are stored in the file local.conf. Open the file with your text editor of choice: $ nano local.conf Enter the following in the file: [[local|localrc]] ADMIN_PASSWORD=secret DATABASE_PASSWORD=$ADMIN_PASSWORD RABBIT_PASSWORD=$ADMIN_PASSWORD SERVICE_PASSWORD=$ADMIN_PASSWORD Change \u2018secret\u2019 in the configuration above to the alphanumeric password of choice. We used 0990. You should use something more secure.","title":"Create a local.conf"},{"location":"DevStackInstallation/#start-the-install","text":"Now, you should be ready to install DevStack. You should still be in \\~/devstack. If not, get there. Run the following to start the DevStack scripts: $ ./stack.sh DevStack will install without further input. Their documentation claims this will take 15-30 minutes. In our experience, the installation could easily take around an hour. Use that time to read up on Linux commands, touch grass, or call your mom.","title":"Start the install"},{"location":"DevStackInstallation/#verification","text":"At last, DevStack has executed every last script, and you\u2019ve been handed back control of the server. Time to see if it worked. First, check if OpenStack is up and running. You will still need to be in the devstack directory. $ source openrc admin admin $ openstack user list $ openstack image list $ openstack server list $ openstack service list $ openstack network list","title":"Verification"},{"location":"DevStackInstallation/#accessing-dashboard","text":"Now, we\u2019ll go to Horizon and try setting up an instance. Enter the server\u2019s IP address in your browser. This should bring you to an OpenStack login page. User: admin or demo Password: secret defined in local.conf file earlier Finished","title":"Accessing Dashboard"},{"location":"Documentation%20Site%20Documentation/","text":"Documentation Site Documentation Author: Nick Miller This site was generated with MkDocs , an open-source Python library for generating static documentation sites. It is hosted on GitHub Pages. Creation/implementation of the site was handled by Nick Miller. The documentation itself was written by all team members. MarkDown documents were written/formatted in VS Code with the markdownlint extension for consistency. Preparation Our documentation was originally written in Microsoft Word in Office 365. This caused a few problems. The original directory structure was difficult and slow to navigate. Team members will not have access to the Microsoft group after graduation. Access required manual addition to the group. The documents were not standardized by format or content. We decided to create this site in response to those issues. It is a fast, organized way to read our documentation. Conversions To convert our .docx files to .md, I used Pandoc , a CLI tool that can convert between practically any document types. Future updates and additions to this documentation should start with MarkDown documents. For posterity, here's how I converted things. First, install Pandoc . I got it from the Ubuntu repository. In your terminal, cd to the folder of your .docx file(s). Now we'll run Pandoc: pandoc --from docx --to markdown -o <filename>.md <filename> The command above calls Pandoc, tells it to convert from .docx to .md, gives the destination file as \\<filename>.md, and tells it which file to convert. Note that this will look different in use. Say we have a file named servertest.docx to convert: pandoc --from docx --to markdown -o servertest.md servertest.docx Theme The site uses MkDoc's built-in theme ReadTheDocs, a clone of ReadTheDocs' layout. This theme was selected for readability in comparison to the default theme and ease of installation as a built-in theme. Material for MkDocs was also considered, but I wanted to avoid an unneccessary step for future maintainers. Updating the Site This section assumes that you have commit access to the site repository in the Cloudgineers GitHub organization. Ensure that Python and Pip are installed on your system. Install MkDocs with Pip. Clone the GitHub repository and edit the documentation in your editor of choice. When it's time to deploy your updates, open a terminal in the root folder of the repository. Run the MkDocs command gh-deploy and MkDocs will commit your changes to the repository, rebuild the site, and redeploy the site using a Github Action. That's all you need to do! pip install mkdocs # Clone and edit as desired... # Navigate to the repo directory # cd ~/your/computer/documentationSite for example # Run gh-deploy mkdocs gh-deploy MkDocs Page on Deploying Docs","title":"Documentation Site Documentation"},{"location":"Documentation%20Site%20Documentation/#documentation-site-documentation","text":"Author: Nick Miller This site was generated with MkDocs , an open-source Python library for generating static documentation sites. It is hosted on GitHub Pages. Creation/implementation of the site was handled by Nick Miller. The documentation itself was written by all team members. MarkDown documents were written/formatted in VS Code with the markdownlint extension for consistency.","title":"Documentation Site Documentation"},{"location":"Documentation%20Site%20Documentation/#preparation","text":"Our documentation was originally written in Microsoft Word in Office 365. This caused a few problems. The original directory structure was difficult and slow to navigate. Team members will not have access to the Microsoft group after graduation. Access required manual addition to the group. The documents were not standardized by format or content. We decided to create this site in response to those issues. It is a fast, organized way to read our documentation.","title":"Preparation"},{"location":"Documentation%20Site%20Documentation/#conversions","text":"To convert our .docx files to .md, I used Pandoc , a CLI tool that can convert between practically any document types. Future updates and additions to this documentation should start with MarkDown documents. For posterity, here's how I converted things. First, install Pandoc . I got it from the Ubuntu repository. In your terminal, cd to the folder of your .docx file(s). Now we'll run Pandoc: pandoc --from docx --to markdown -o <filename>.md <filename> The command above calls Pandoc, tells it to convert from .docx to .md, gives the destination file as \\<filename>.md, and tells it which file to convert. Note that this will look different in use. Say we have a file named servertest.docx to convert: pandoc --from docx --to markdown -o servertest.md servertest.docx","title":"Conversions"},{"location":"Documentation%20Site%20Documentation/#theme","text":"The site uses MkDoc's built-in theme ReadTheDocs, a clone of ReadTheDocs' layout. This theme was selected for readability in comparison to the default theme and ease of installation as a built-in theme. Material for MkDocs was also considered, but I wanted to avoid an unneccessary step for future maintainers.","title":"Theme"},{"location":"Documentation%20Site%20Documentation/#updating-the-site","text":"This section assumes that you have commit access to the site repository in the Cloudgineers GitHub organization. Ensure that Python and Pip are installed on your system. Install MkDocs with Pip. Clone the GitHub repository and edit the documentation in your editor of choice. When it's time to deploy your updates, open a terminal in the root folder of the repository. Run the MkDocs command gh-deploy and MkDocs will commit your changes to the repository, rebuild the site, and redeploy the site using a Github Action. That's all you need to do! pip install mkdocs # Clone and edit as desired... # Navigate to the repo directory # cd ~/your/computer/documentationSite for example # Run gh-deploy mkdocs gh-deploy MkDocs Page on Deploying Docs","title":"Updating the Site"},{"location":"KnownIssues/","text":"Known Issues Devstack Occasionally, you can run into issues with running Devstack. Oftentimes, this can be remedied by running the following commands in order: ./unstack.sh ./clean.sh ./stack.sh Make sure you are in the devstack directory before running these commands. If you run stack.sh and, upon loading into the Horizon dashboard, you are greeted with the Apache Default Page instead of the Openstack login, run the following command on the server. service apache2 reload If this does not fix it, refresh the cache on your browser or open the dashboard in a private window. If it still does not fix, attempt the following commands in this order: sudo a2dissite 000-default.conf systemctl reload apache2 If you get the error that hosts are not mapped to any cell when attempting to stack or create an instance, run the following command on the server. sudo nova-manage cell_v2 discover_hosts -verbose If you have errors related to authentication when attempting to run any of the above commands, log into the Horzion dashboard on a separate device. Then, go to the top right where it shows the profile you are logged in on. Click, and it should say \"Openstack RC File\". Make sure you are logged into the admin account, and download this file. Transfer it to a USB drive and copy it to the Devstack directory on the server, then run the following command: source openrc","title":"Known Issues"},{"location":"KnownIssues/#known-issues","text":"","title":"Known Issues"},{"location":"KnownIssues/#devstack","text":"Occasionally, you can run into issues with running Devstack. Oftentimes, this can be remedied by running the following commands in order: ./unstack.sh ./clean.sh ./stack.sh Make sure you are in the devstack directory before running these commands. If you run stack.sh and, upon loading into the Horizon dashboard, you are greeted with the Apache Default Page instead of the Openstack login, run the following command on the server. service apache2 reload If this does not fix it, refresh the cache on your browser or open the dashboard in a private window. If it still does not fix, attempt the following commands in this order: sudo a2dissite 000-default.conf systemctl reload apache2 If you get the error that hosts are not mapped to any cell when attempting to stack or create an instance, run the following command on the server. sudo nova-manage cell_v2 discover_hosts -verbose If you have errors related to authentication when attempting to run any of the above commands, log into the Horzion dashboard on a separate device. Then, go to the top right where it shows the profile you are logged in on. Click, and it should say \"Openstack RC File\". Make sure you are logged into the admin account, and download this file. Transfer it to a USB drive and copy it to the Devstack directory on the server, then run the following command: source openrc","title":"Devstack"},{"location":"Overview/","text":"Overview Purpose Current Status Intended Use Cases Key Concepts Key Contacts Contributors Jackson Gray bio. Carnell Greenfield bio. Jaden Jefferson bio. Nick Miller bio. Kelly Payne bio. Stakeholders","title":"Overview"},{"location":"Overview/#overview","text":"","title":"Overview"},{"location":"Overview/#purpose","text":"","title":"Purpose"},{"location":"Overview/#current-status","text":"","title":"Current Status"},{"location":"Overview/#intended-use-cases","text":"","title":"Intended Use Cases"},{"location":"Overview/#key-concepts","text":"","title":"Key Concepts"},{"location":"Overview/#key-contacts","text":"","title":"Key Contacts"},{"location":"Overview/#contributors","text":"Jackson Gray bio. Carnell Greenfield bio. Jaden Jefferson bio. Nick Miller bio. Kelly Payne bio.","title":"Contributors"},{"location":"Overview/#stakeholders","text":"","title":"Stakeholders"},{"location":"Storage%20Configuration/","text":"","title":"Storage Configuration"},{"location":"TODOs%20-%20Table%20of%20Contents/","text":"TODOs - Table of Contents Overview: Write (Mostly collecting existing info) (Doc) Purpose of project Current status Intended Use Cases Key Concepts (Write) Key Contacts/Contributors/Stakeholders (Write) System Architecture (Folder ?) not much done here, at least not written out. Overview Diagram (Create ?) Hardware Inventory (Write/consolidate) Logical Architecture DevStack vs. Production (write) Server Setup (Folder) Operating System Installation iDRAC configuration DevStack Proof of Concept (Folder) Installation Configuration Details Known Issues Lessons Learned & Limitations Production Deployment Plan (Doc?) Recommended Tools Chosen Deployment Method Environment Preparation OpenStack Services to Deploy High Availability & Redundancy Plans Networking Setup (Folder) Introduction & Issues Network Topology VLANS/Subnets CISCO Switch Storage Configuration (Doc) RAID Level & Rationale Current Setup Deployment Plans Security Considerations (Doc) Secure Configuration Identity Management Deployment Plans Troubleshooting (Doc) Common Problems Investigation Steps Appendices (Folder) Glossary References & Useful Links","title":"TODOs - Table of Contents"},{"location":"TODOs%20-%20Table%20of%20Contents/#todos-table-of-contents","text":"","title":"TODOs - Table of Contents"},{"location":"TODOs%20-%20Table%20of%20Contents/#overview-write-mostly-collecting-existing-info-doc","text":"Purpose of project Current status Intended Use Cases Key Concepts (Write) Key Contacts/Contributors/Stakeholders (Write)","title":"Overview: Write (Mostly collecting existing info) (Doc)"},{"location":"TODOs%20-%20Table%20of%20Contents/#system-architecture-folder","text":"not much done here, at least not written out. Overview Diagram (Create ?) Hardware Inventory (Write/consolidate) Logical Architecture DevStack vs. Production (write)","title":"System Architecture (Folder ?)"},{"location":"TODOs%20-%20Table%20of%20Contents/#server-setup-folder","text":"Operating System Installation iDRAC configuration","title":"Server Setup (Folder)"},{"location":"TODOs%20-%20Table%20of%20Contents/#devstack-proof-of-concept-folder","text":"Installation Configuration Details Known Issues Lessons Learned & Limitations","title":"DevStack Proof of Concept (Folder)"},{"location":"TODOs%20-%20Table%20of%20Contents/#production-deployment-plan-doc","text":"Recommended Tools Chosen Deployment Method Environment Preparation OpenStack Services to Deploy High Availability & Redundancy Plans","title":"Production Deployment Plan (Doc?)"},{"location":"TODOs%20-%20Table%20of%20Contents/#networking-setup-folder","text":"Introduction & Issues Network Topology VLANS/Subnets CISCO Switch","title":"Networking Setup (Folder)"},{"location":"TODOs%20-%20Table%20of%20Contents/#storage-configuration-doc","text":"RAID Level & Rationale Current Setup Deployment Plans","title":"Storage Configuration (Doc)"},{"location":"TODOs%20-%20Table%20of%20Contents/#security-considerations-doc","text":"Secure Configuration Identity Management Deployment Plans","title":"Security Considerations (Doc)"},{"location":"TODOs%20-%20Table%20of%20Contents/#troubleshooting-doc","text":"Common Problems Investigation Steps","title":"Troubleshooting (Doc)"},{"location":"TODOs%20-%20Table%20of%20Contents/#appendices-folder","text":"Glossary References & Useful Links","title":"Appendices (Folder)"},{"location":"Table%20of%20Contents/","text":"Table of Contents Overview Purpose of project Current status Intended Use Cases Key Concepts Key Contacts/Contributors/Stakeholders System Architecture Overview Diagram Hardware Inventory Logical Architecture DevStack vs. Production Server Setup Operating System Installation iDRAC configuration DevStack Proof of Concept Installation Configuration Details Known Issues Lessons Learned & Limitations Production Deployment Plan Recommended Tools Chosen Deployment Method Environment Preparation OpenStack Services to Deploy High Availability & Redundancy Plans Networking Setup Introduction & Issues Network Topology VLANS/Subnets CISCO Switch Storage Configuration RAID Level & Rationale Current Setup Deployment Plans Security Considerations Secure Configuration Identity Management Deployment Plans Troubleshooting Common Problems Investigation Steps Appendices Glossary References & Useful Links","title":"Table of Contents"},{"location":"Table%20of%20Contents/#table-of-contents","text":"","title":"Table of Contents"},{"location":"Table%20of%20Contents/#overview","text":"Purpose of project Current status Intended Use Cases Key Concepts Key Contacts/Contributors/Stakeholders","title":"Overview"},{"location":"Table%20of%20Contents/#system-architecture","text":"Overview Diagram Hardware Inventory Logical Architecture DevStack vs. Production","title":"System Architecture"},{"location":"Table%20of%20Contents/#server-setup","text":"Operating System Installation iDRAC configuration","title":"Server Setup"},{"location":"Table%20of%20Contents/#devstack-proof-of-concept","text":"Installation Configuration Details Known Issues Lessons Learned & Limitations","title":"DevStack Proof of Concept"},{"location":"Table%20of%20Contents/#production-deployment-plan","text":"Recommended Tools Chosen Deployment Method Environment Preparation OpenStack Services to Deploy High Availability & Redundancy Plans","title":"Production Deployment Plan"},{"location":"Table%20of%20Contents/#networking-setup","text":"Introduction & Issues Network Topology VLANS/Subnets CISCO Switch","title":"Networking Setup"},{"location":"Table%20of%20Contents/#storage-configuration","text":"RAID Level & Rationale Current Setup Deployment Plans","title":"Storage Configuration"},{"location":"Table%20of%20Contents/#security-considerations","text":"Secure Configuration Identity Management Deployment Plans","title":"Security Considerations"},{"location":"Table%20of%20Contents/#troubleshooting","text":"Common Problems Investigation Steps","title":"Troubleshooting"},{"location":"Table%20of%20Contents/#appendices","text":"Glossary References & Useful Links","title":"Appendices"},{"location":"Troubleshooting/","text":"","title":"Troubleshooting"},{"location":"DevStack%20Proof%20of%20Concept/DevStack%20Bugs/","text":"Bugs in DevStack Author: Nick Miller If you are getting Apache default and not DevStack dashboard you will need to run the command: sudo service apache2 restart. If you are having issues with DevStack dashboard, you can try cleaning it with these steps: DevStack must be properly shut down before shutting down the server: Run the following commands in \\~/devstack: ./unstack.sh ./clean.sh On startup, run: cd devstack ./stack.sh The startup script takes approximately 13 minutes to execute. Error Touch: cannot touch 'opt/stack/devstack/.localrc.password': Permission denied Here we have a permission error. I resolved this problem by first checking the permissions and owner of my /opt/stack/devstack directory, then /opt/stack. On running ls --la /opt/stack, I found that most of the folders within belonged to stack, but the devstack directory belonged to root. Groups were inconsistent (this isn't very important here). The devstack directory had permissions drwxr-xr-x, meaning only the root user had full write access. Since stack.sh runs as the user stack, it couldn't write in the folder, causing the error. Next I ran ls --la /opt/ to see what the stack folder's permissions and owner looked like. It had full permissions but was owned by root. So I used chown --r stack:stack /opt/stack to change its owner to the stack user. Stack.sh now got farther but errors again.","title":"Bugs in DevStack"},{"location":"DevStack%20Proof%20of%20Concept/DevStack%20Bugs/#bugs-in-devstack","text":"Author: Nick Miller If you are getting Apache default and not DevStack dashboard you will need to run the command: sudo service apache2 restart. If you are having issues with DevStack dashboard, you can try cleaning it with these steps: DevStack must be properly shut down before shutting down the server: Run the following commands in \\~/devstack: ./unstack.sh ./clean.sh On startup, run: cd devstack ./stack.sh The startup script takes approximately 13 minutes to execute.","title":"Bugs in DevStack"},{"location":"DevStack%20Proof%20of%20Concept/DevStack%20Bugs/#error","text":"Touch: cannot touch 'opt/stack/devstack/.localrc.password': Permission denied Here we have a permission error. I resolved this problem by first checking the permissions and owner of my /opt/stack/devstack directory, then /opt/stack. On running ls --la /opt/stack, I found that most of the folders within belonged to stack, but the devstack directory belonged to root. Groups were inconsistent (this isn't very important here). The devstack directory had permissions drwxr-xr-x, meaning only the root user had full write access. Since stack.sh runs as the user stack, it couldn't write in the folder, causing the error. Next I ran ls --la /opt/ to see what the stack folder's permissions and owner looked like. It had full permissions but was owned by root. So I used chown --r stack:stack /opt/stack to change its owner to the stack user. Stack.sh now got farther but errors again.","title":"Error"},{"location":"DevStack%20Proof%20of%20Concept/DevStack%20Installation/","text":"Installing DevStack Author: Nick Miller Objectives Use DevStack to install OpenStack Successfully interact with OpenStack via CLI Successfully interact with OpenStack via Horizon Web UI Background DevStack is a set of scripts which can be used to quickly set up an OpenStack environment. A DevStack-based environment is used for testing and development and should not be your final cloud\u2019s basis. DevStack is very useful for testing to see whether your hardware can run OpenStack. Note that, like the rest of this project, a good understanding of Linux will be invaluable for saving time, effort, and confusion. https://linuxupskillchallenge.com/ looks like a useful resource for the knowledge you\u2019ll need here. Set up an Ubuntu Server VM and mess with it. The information in this document is heavily referenced from the official DevStack installation guide: https://docs.openstack.org/devstack/latest/index.html Prerequisites Fresh Ubuntu Server 24.04 installation Internet connection for server Installation Setup First we\u2019ll add a stack user to run DevStack. The following commands will create the user, give it executable permissions in all cases, and add it to the list of sudoers. sudo useradd \u2013s /bin/bash -d /opt/stack -m stack sudo chmod +x /opt/stack echo \"stack ALL=(ALL) NOPASSWD: ALL\" | sudo tee /etc/sudoers.d/stack sudo -u stack \u2013i Next, we\u2019ll download DevStack by cloning its Git repository. git clone <https://opendev.org/openstack/devstack> cd devstack Create a local.conf Passwords for the OpenStack installation are stored in the file local.conf. Open the file with your text editor of choice: nano local.conf Enter the following in the file: \\[\\[local|localrc\\]\\] ADMIN\\_PASSWORD=secret DATABASE\\_PASSWORD=$ADMIN\\_PASSWORD RABBIT\\_PASSWORD=$ADMIN\\_PASSWORD SERVICE\\_PASSWORD=$ADMIN\\_PASSWORD Change \u2018secret\u2019 in the configuration above to the alphanumeric password of choice. We used 0990. You should use something more secure. Start the install Now, you should be ready to install DevStack. You should still be in \\~/devstack. If not, get there. Run the following to start the DevStack scripts: ./stack.sh DevStack will install without further input. Their documentation claims this will take 15-30 minutes. In our experience, the installation could easily take around an hour. Use that time to read up on Linux commands, touch grass, or call your mom. Verification At last, DevStack has executed every last script, and you\u2019ve been handed back control of the server. Time to see if it worked. First, check if OpenStack is up and running. You will still need to be in the devstack directory. source openrc admin admin openstack user list openstack image list openstack server list openstack service list openstack network list Accessing Dashboard Now, we\u2019ll go to Horizon and try setting up an instance. Enter the server\u2019s IP address in your browser. This should bring you to an OpenStack login page. User: admin or demo Password: secret defined in local.conf file earlier Finished","title":"Installing DevStack"},{"location":"DevStack%20Proof%20of%20Concept/DevStack%20Installation/#installing-devstack","text":"Author: Nick Miller","title":"Installing DevStack"},{"location":"DevStack%20Proof%20of%20Concept/DevStack%20Installation/#objectives","text":"Use DevStack to install OpenStack Successfully interact with OpenStack via CLI Successfully interact with OpenStack via Horizon Web UI","title":"Objectives"},{"location":"DevStack%20Proof%20of%20Concept/DevStack%20Installation/#background","text":"DevStack is a set of scripts which can be used to quickly set up an OpenStack environment. A DevStack-based environment is used for testing and development and should not be your final cloud\u2019s basis. DevStack is very useful for testing to see whether your hardware can run OpenStack. Note that, like the rest of this project, a good understanding of Linux will be invaluable for saving time, effort, and confusion. https://linuxupskillchallenge.com/ looks like a useful resource for the knowledge you\u2019ll need here. Set up an Ubuntu Server VM and mess with it. The information in this document is heavily referenced from the official DevStack installation guide: https://docs.openstack.org/devstack/latest/index.html","title":"Background"},{"location":"DevStack%20Proof%20of%20Concept/DevStack%20Installation/#prerequisites","text":"Fresh Ubuntu Server 24.04 installation Internet connection for server","title":"Prerequisites"},{"location":"DevStack%20Proof%20of%20Concept/DevStack%20Installation/#installation","text":"","title":"Installation"},{"location":"DevStack%20Proof%20of%20Concept/DevStack%20Installation/#setup","text":"First we\u2019ll add a stack user to run DevStack. The following commands will create the user, give it executable permissions in all cases, and add it to the list of sudoers. sudo useradd \u2013s /bin/bash -d /opt/stack -m stack sudo chmod +x /opt/stack echo \"stack ALL=(ALL) NOPASSWD: ALL\" | sudo tee /etc/sudoers.d/stack sudo -u stack \u2013i Next, we\u2019ll download DevStack by cloning its Git repository. git clone <https://opendev.org/openstack/devstack> cd devstack","title":"Setup"},{"location":"DevStack%20Proof%20of%20Concept/DevStack%20Installation/#create-a-localconf","text":"Passwords for the OpenStack installation are stored in the file local.conf. Open the file with your text editor of choice: nano local.conf Enter the following in the file: \\[\\[local|localrc\\]\\] ADMIN\\_PASSWORD=secret DATABASE\\_PASSWORD=$ADMIN\\_PASSWORD RABBIT\\_PASSWORD=$ADMIN\\_PASSWORD SERVICE\\_PASSWORD=$ADMIN\\_PASSWORD Change \u2018secret\u2019 in the configuration above to the alphanumeric password of choice. We used 0990. You should use something more secure.","title":"Create a local.conf"},{"location":"DevStack%20Proof%20of%20Concept/DevStack%20Installation/#start-the-install","text":"Now, you should be ready to install DevStack. You should still be in \\~/devstack. If not, get there. Run the following to start the DevStack scripts: ./stack.sh DevStack will install without further input. Their documentation claims this will take 15-30 minutes. In our experience, the installation could easily take around an hour. Use that time to read up on Linux commands, touch grass, or call your mom.","title":"Start the install"},{"location":"DevStack%20Proof%20of%20Concept/DevStack%20Installation/#verification","text":"At last, DevStack has executed every last script, and you\u2019ve been handed back control of the server. Time to see if it worked. First, check if OpenStack is up and running. You will still need to be in the devstack directory. source openrc admin admin openstack user list openstack image list openstack server list openstack service list openstack network list","title":"Verification"},{"location":"DevStack%20Proof%20of%20Concept/DevStack%20Installation/#accessing-dashboard","text":"Now, we\u2019ll go to Horizon and try setting up an instance. Enter the server\u2019s IP address in your browser. This should bring you to an OpenStack login page. User: admin or demo Password: secret defined in local.conf file earlier Finished","title":"Accessing Dashboard"},{"location":"General/Kubernetes%20Research/","text":"Kubernetes Research (developed by Google managed by CNCF) geeksforgeeks.org/introduction-to-kubernetes-k8s/ Kubernetes is open-source Container Management tool that automates container deployment, container scaling, descaling, and container load balancing. Benefits of using Kubernetes: Automated deployment and management Scalability-offers horizontal pod scaling -- pods automatically scaled depending on load High availability- reducing latency issues Cost-effectiveness Improved developer productivity Deploying and Managing Containerized Applications with Kubernetes Install Kubernetes ad setup Kubernetes cluster -- one master and 2 worker nodes in any of the clouds Know create deployment manifestfile -- specify exact number of pods required and the container image and what types of resources are required after completion of writing the manifestfile apply the file using kubectl command. After creating pods- expose the service to the outside of the -- write one more manifestfile which contains service type (LoadBalancer or ClusterIP), ports,and selectors. Networking -- use different types of plugins to increase flexibility. Kubernetes follows the client-server architecture -- master installed on one machine and the node on separate Linux machines. Follows master-slave model---master manages Docker containers across multiple Kubernetes nodes. A master and its controlled nodes(worker nodes) make up a \"Kubernetes cluster\". {width=\"4.7in\" height=\"2.788365048118985in\"} Kubernetes master is responsible for managing the entire cluster, coordinates all activities inside the cluster, and communicates with worker nodes to keep the Kubernetes and application running. When Kubernetes is installed, we have 4 primary components of Kubernetes Master that are also installed. Components of the Kubernetes Master: API Server-entry point for all the REST commands used to control cluster (API tool kubectl), Scheduler-service that distributes workload and allocates the pod to the new node, Controller Manager- known as controllers---it is a daemon that runs in a non-terminating loop and is responsible for collecting and sending information to the API server. Kubernetes Worker Node Components: Kubelet-primary node agent that communicates with master node and executes on each worker node inside the cluster, Kube-Proxy-core networking component inside the Kubernetes cluster-responsible for maintaining entire network configuration, Pods- a group of containers that are deployed together on the same host, Docker- the containerization platform used to package your application and all its dependencies together in the form of containers to make sure your application works in any environment. Kubernetes is used with hybrid and multi-cloud deployments as well as edge computing --other applications listed these are the ones that stood out for me relating to our project 5 BASIC Steps of Building a Private Cloud: 1 Standardization -- software and hardware components used for deploying private cloud 2. Consolidation- trimming down equipment to what you need and decide what is able to be scaled up in the future 3. Virtualization- depends on intended delivery model and design of private cloud (Hyper-V, Xen, or VMware) 4. Automation -- modify IT processes to your liking 5. Orchestration -- final stage -- \"self-service\" ability to private cloud architecture- two main components -- a self-service portal and a service catalog Kubernetes in the cloud and on bare metal differ https://kubernetes.io/blog/2024/04/05/diy-create-your-own-cloud-with-kubernetes-part-1/ https://kubernetes.io/blog/2024/04/05/diy-create-your-own-cloud-with-kubernetes-part-2/ https://kubernetes.io/blog/2024/04/05/diy-create-your-own-cloud-with-kubernetes-part-3/ https://deploy.equinix.com/blog/guide-to-running-kubernetes-on-bare-metal/","title":"Kubernetes Research"},{"location":"General/Mini%20Charter%20%28Private%20Cloud%20Server%29/","text":"{width=\"3.8958333333333335in\" height=\"1.1875in\"} +---------------------------+ | > Project Name: OpenStack | +---------------------------+ Prepared By: Jaden Jefferson, Nick Miller Date: 2 April 2025 Department: TSYS School of Computer Science Sponsor: Dr. Zhou Project Manager: Technical Rep: Stakeholders Name Email Phone Project Sponsor Project Manager Functional Manager/\\ Data Stewart Stakeholder Stakeholder Stakeholder Stakeholder Stakeholder Stakeholder +----------------------------------+----------------------------------+ | Project Description | How does this project contribute | | | to the overall Vision of | | | Columbus State University? What | | | does this project need to | | | accomplish? What are the | | | benefits? Please list the | | | deliverables. | +==================================+==================================+ | Columbus State University's | | | vision prioritizes student | | | success and academic excellence. | | | By tasking students with the | | | design, implementation, and | | | maintenance of a private cloud | | | for real-life usage by peers, | | | this project will provide both | | | career-relevant experience and | | | daily utility for computer | | | science students. Senior-level | | | students who work on the cloud | | | will gain invaluable experience | | | with requirement analysis, | | | collaboration, stakeholder | | | communication, and production | | | procedures. Younger students | | | will have the chance to work | | | with industry-standard cloud | | | computing technology over the | | | courses of their studies. The | | | project will provide a | | | significant new way for students | | | to engage with computer science. | | | | | | Successful execution of the | | | project is defined by the | | | establishment of a functional | | | private cloud from bare metal, | | | local servers. The cloud should | | | be fully accessible by students | | | over the campus LAN and the | | | Internet. Students will be able | | | to access virtual computing | | | services on-demand, simplifying | | | their development process. The | | | cloud must be highly | | | maintainable and extensible, | | | allowing future senior students | | | to continue and expand upon our | | | efforts. Clear documentation on | | | the system will be necessary for | | | future project continuation. | | | | | | Undergraduate and graduate | | | computer science students will | | | be able to experiment with | | | programming and system | | | administration on ephemeral | | | virtual machines, allowing for | | | quick, low-risk access to | | | unfamiliar operating systems and | | | environments. As a private, | | | on-premises cloud platform, the | | | project will be faster and less | | | expensive than offerings from | | | public cloud providers. Large | | | datasets, which are a vital | | | component in industry trends | | | like big data and AI, can be | | | stored locally for reduced costs | | | and increased computational | | | accuracy. The hands-on | | | experience gained from the use | | | of these machines will | | | strengthen students' overall | | | understanding of IT | | | infrastructure containing | | | networking, hardware, and | | | software components. Senior | | | students who work directly on | | | the cloud servers will gain | | | further experience with real | | | hardware that would otherwise | | | have prohibitively high barriers | | | to entries. | | | | | | The primary deliverable will be | | | an OpenStack-based cloud | | | infrastructure, fully deployed | | | and accessible by students | | | through a web-based dashboard | | | and a command line interface, | | | which can provide on-demand | | | virtual machines. | | | | | | A dashboard for maintainers and | | | faculty will provide | | | administrative access and system | | | monitoring. | | | | | | Documentation for users will be | | | created to explain the basics | | | necessary to utilize the | | | system's capabilities. | | | | | | Documentation for maintainers | | | will enable the project to | | | continue and expand. | | +----------------------------------+----------------------------------+ +----------------------------------+----------------------------------+ | Information Security\\ | How is data being made secure | | & Risks | for this project? Does the | | | project need BC/DR plans in case | | | of a disaster?\\ | | | Identify any risks or obstacles | | | that may cause the project to | | | fail. | +==================================+==================================+ | A variety of security measures | | | will be taken. The physical | | | servers will operate from a | | | locked room. Further physical | | | security can be achieved with | | | the lockable server front | | | bezels, and a lockable server | | | rack. The servers' storage disks | | | are encrypted with LUKS (Linux | | | Unified Key Setup). Access to | | | the cloud will be managed with | | | OpenStack Keystone, an | | | implementation of OpenStack's | | | token-based authentication API. | | | The cloud will be connected | | | through a private VLAN with | | | configurable access control | | | lists. Usernames and passwords | | | for the servers will be stored | | | and managed with BitWarden, an | | | open-source, encrypted password | | | manager. | | | | | | Yes, some plans must be created | | | for continuation and recovery in | | | disasters. In the case of power | | | outages, documentation on server | | | startup will be necessary. | | | Similarly, plans for network | | | connection and reconnection are | | | vital for continued | | | availability. Evaluations should | | | be conducted on the cloud's | | | resilience and critical systems | | | in order to prioritize future | | | maintenance and upgrades.\\ | | | \\ | | | A short list of serious risks | | | threaten the project's success. | | | The necessity of departmental | | | support for the project | | | characterizes immediate risks. | | | Sufficient network access to | | | connect the cloud servers to | | | each other and the Internet has | | | not been granted, halting | | | progress towards a full | | | deployment. Funding for future | | | maintenance and upgrades may | | | become necessary, requiring | | | assistance from the Computer | | | Science department, in potential | | | events of hardware failures or | | | obsolescence. Prominent among | | | long-term obstacles is the | | | ongoing transfer of knowledge | | | between student maintenance | | | teams; continual effort will be | | | required on behalf of the | | | Computer Science faculty to | | | ensure successful preservation | | | of existing documentation. | | | Outages and ensuing disaster | | | recovery are long-term risks | | | which can be largely mitigated | | | through documentation. | | +----------------------------------+----------------------------------+ Scope List what the project will and will not address. The project will address the provision of cloud computing resources for experiential learning. To preserve resource availability, it will not provide long-term server hosting, virtual machines, cloud storage, or high-performance computing. Project Start (estimated): January 13, 2025 Project Finish (estimated): April 30, 2025 Project Cost\\ \\$480 (estimated): Funding Source: Approval Signatures Sponsor Title Date Executive Sponsor Title Date Program Manager Date Director or CIO Date Final Customer Sign Off[^1] Sponsor Title Date Executive Sponsor Title Date ^\u00ab^ Should be completed as a final signoff to the project. [^1]:","title":"Mini Charter (Private Cloud Server)"},{"location":"General/Mini%20Charter%20%28Private%20Cloud%20Server%29/#approval-signatures","text":"Sponsor Title Date Executive Sponsor Title Date Program Manager Date Director or CIO Date","title":"Approval Signatures"},{"location":"General/Mini%20Charter%20%28Private%20Cloud%20Server%29/#final-customer-sign-off1","text":"Sponsor Title Date Executive Sponsor Title Date ^\u00ab^ Should be completed as a final signoff to the project. [^1]:","title":"Final Customer Sign Off[^1]"},{"location":"General/charter%20scratchpad/","text":"How does this project contribute to the overall Vision of Columbus State University? Columbus State University's vision prioritizes student success and academic excellence. By tasking students with the design, implementation, and maintenance of a private cloud for real-life usage by peers, this project will provide both career-relevant experience and daily utility for computer science students. Senior-level students who work on the cloud will gain invaluable experience with requirement analysis, collaboration, stakeholder communication, and production procedures. Younger students will have the chance to work with industry-standard cloud computing technology over the courses of their studies. The project will provide a significant new way for students to engage with computer science. What does this project need to accomplish? Successful execution of the project is defined by the establishment of a functional private cloud from bare metal, local servers. The cloud should be fully accessible by students over the campus LAN and the Internet. Students will be able to access virtual computing services on-demand, simplifying their development process. The cloud must be highly maintainable and extensible, allowing future senior students to continue and expand upon our efforts. Clear documentation on the system will be necessary for future project continuation. What are the benefits? Undergraduate and graduate computer science students will be able to experiment with programming and system administration on ephemeral virtual machines, allowing for quick, low-risk access to unfamiliar operating systems and environments. As a private, on-premises cloud platform, the project will be faster and less expensive than offerings from public cloud providers. Large datasets, which are a vital component in industry trends like big data and AI, can be stored locally for reduced costs and increased computational accuracy. The hands-on experience gained from the use of these machines will strengthen students' overall understanding of IT infrastructure containing networking, hardware, and software components. Senior students who work directly on the cloud servers will gain further experience with real hardware that would otherwise have prohibitively high barriers to entries. Please list the deliverables. The primary deliverable will be an OpenStack-based cloud infrastructure, fully deployed and accessible by students through a web-based dashboard and a command line interface, which can provide on-demand virtual machines. A dashboard for maintainers and faculty will provide administrative access and system monitoring. Documentation for users will be created to explain the basics necessary to utilize the system's capabilities. Documentation for maintainers will enable the project to continue and expand. How is data being made secure for this project? A variety of security measures will be conducted. The physical servers will operate from a locked room. Further physical security can be achieved with the lockable server front bezels, and a lockable server rack. The servers' storage disks are encrypted with LUKS (Linux Unified Key Setup). Access to the cloud will be managed with OpenStack Keystone, an implementation of OpenStack's token-based authentication API. The cloud will be connected through a private VLAN with configurable access control lists. Usernames and passwords for the servers will be stored and managed with BitWarden, an open-source, encrypted password manager. Does the project need BC/DR plans in case of a disaster? Yes, some plans must be created for continuation and recovery in disasters. In the case of power outages, documentation on server startup will be necessary. Similarly, plans for network connection and reconnection are vital for continued availability. Evaluations should be conducted on the cloud's resilience and critical systems in order to prioritize future maintenance and upgrades. Identify any risks or obstacles that may cause the project to fail. A short list of serious risks threaten the project's success. The necessity of departmental support for the project characterizes immediate risks. Sufficient network access to connect the cloud servers to each other and the Internet has not been granted, halting progress towards a full deployment. Funding for future maintenance and upgrades may become necessary, requiring assistance from the Computer Science department, in potential events of hardware failures or obsolescence. Prominent among long-term obstacles is the ongoing transfer of knowledge between student maintenance teams; continual effort will be required on behalf of the Computer Science faculty to ensure successful preservation of existing documentation. Outages and ensuing disaster recovery are long-term risks which can be largely mitigated through documentation. List what the project will and will not address. The project will address the provision of cloud computing resources for experiential learning. To preserve resource availability, it will not provide long-term server hosting, virtual machines, cloud storage, or high-performance computing. Networking resources for scalable website platforms 4.8 KWh/day / server. 144 KWh/month/server. \\~432 KWh Assuming the servers idle at 200W, the cloud computing setup will consume approximately 430 KWh per month. +----------------------------------------------+ | Project Start (estimated): January 10th | +==============================================+ | Project Finish (estimated): May 5th | +----------------------------------------------+ | Project Cost \\ | | (estimated): | | | | [Equipment]{.underline} | | | | - Front Bezel with key 710 \\$ 40 (renewed) | | | | - Front Bezel with key 710 \\$ 40 (renewed) | | | | - Front Bezel with key 730 \\$ 49 (renewed) | | | | - Rack Rail 710 \\$ 97.35/\\$129 (renewed) | | | | - Rack Rail 710 \\$ 97.35/\\$129 (renewed) | | | | - Rack Rail 730 \\$ | +----------------------------------------------+ | Funding Source: For Dr. Zhou | +----------------------------------------------+ What I've learned so far: Private Server Setup Installation of dev stack, OpenStack, Kubernetes, and Kolla Ansible Updating a private server in the Lifecycle Controller Server Rack Setup Structuring OpenStack system Multi-node -- connect all three servers together Document with pictures of server creation","title":"Charter scratchpad"},{"location":"General/Engineering%20Documentation/Server%20Port%20Address%20Allocation/","text":"Subnet size for a VLAN in a Cisco network running OpenStack: /24 (255.255.255.0) \u2192 254 usable IPs (Common choice for small to medium setups) Scalable but not excessive for proof of concept. Keeps network simple while allowing enough IPs for VMs and infrastructure. /22 (255.255.252.0) \u2192 1022 usable IPs (Better for larger deployments) Avoids unnecessary complexity of larger subnet masks like /22 /21 (255.255.248.0) \u2192 2046 usable IPs (For even larger networks) More Proof: Cisco Site Reddit Post VLAN configuration guidance on your Cisco switches for OpenStack: VLAN 100 is used for OpenStack instances. VLAN 200 is used for OpenStack management. VLAN 300 is for storage traffic (if needed). Trunking is used to allow multiple VLANs between switches and OpenStack nodes. Number of IP addresses required for OpenStack on Cisco : OpenStack Controller needs 1-2 ips Compute Nodes needs 3 ips Management VLAN (VLAN 200) \u2192 For OpenStack services (Controller, Compute, Storage). Instance VLAN (VLAN 100) \u2192 For VM traffic. Storage VLAN (VLAN 300) \u2192 If using Ceph/NFS. External VLAN \u2192 If you need external internet access for VMs.","title":"Server Port Address Allocation"},{"location":"General/Engineering%20Documentation/Configuration%20and%20Installation%20Docs/DevStack_noHostsMapped/","text":"Devstack installation, defaults Error: No host mapped to the whatever Copied the admin openrc from horizon > flash drive > server https://docs.openstack.org/nova/2024.2/install/compute-install-ubuntu.html#add-the-compute-node-to-the-cell-database sudo nova-manage cell_v2 map_cell_and_hosts\\ # Tells the system to check for hosts/cells and map them\\ # --- What i ran is below\\ . admin-openrc\\ # TBH ran it because the openstack page told me to\\ # authentication\\ \\ openstack compute service list --service nova-compute\\ # List the services running under nova-compute\\ \\ sudo nova-manage cell_v2 discover_hosts --verbose\\ # checks for hosts, verbose just outputs everything\\ \\ nova-manage cell_v2 discover_hosts\\ # Same command but not sudo\\'d or verbose","title":"DevStack noHostsMapped"},{"location":"General/Engineering%20Documentation/Configuration%20and%20Installation%20Docs/Kubernetes%20Research/","text":"Kubernetes Research (developed by Google managed by CNCF) geeksforgeeks.org/introduction-to-kubernetes-k8s/ Kubernetes is open-source Container Management tool that automates container deployment, container scaling, descaling, and container load balancing. Benefits of using Kubernetes: Automated deployment and management Scalability-offers horizontal pod scaling -- pods automatically scaled depending on load High availability- reducing latency issues Cost-effectiveness Improved developer productivity Deploying and Managing Containerized Applications with Kubernetes Install Kubernetes ad setup Kubernetes cluster -- one master and 2 worker nodes in any of the clouds Know create deployment manifestfile -- specify exact number of pods required and the container image and what types of resources are required after completion of writing the manifestfile apply the file using kubectl command. After creating pods- expose the service to the outside of the -- write one more manifestfile which contains service type (LoadBalancer or ClusterIP), ports,and selectors. Networking -- use different types of plugins to increase flexibility. Kubernetes follows the client-server architecture -- master installed on one machine and the node on separate Linux machines. Follows master-slave model---master manages Docker containers across multiple Kubernetes nodes. A master and its controlled nodes(worker nodes) make up a \"Kubernetes cluster\". {width=\"4.7in\" height=\"2.788365048118985in\"} Kubernetes master is responsible for managing the entire cluster, coordinates all activities inside the cluster, and communicates with worker nodes to keep the Kubernetes and application running. When Kubernetes is installed, we have 4 primary components of Kubernetes Master that are also installed. Components of the Kubernetes Master: API Server-entry point for all the REST commands used to control cluster (API tool kubectl), Scheduler-service that distributes workload and allocates the pod to the new node, Controller Manager- known as controllers---it is a daemon that runs in a non-terminating loop and is responsible for collecting and sending information to the API server. Kubernetes Worker Node Components: Kubelet-primary node agent that communicates with master node and executes on each worker node inside the cluster, Kube-Proxy-core networking component inside the Kubernetes cluster-responsible for maintaining entire network configuration, Pods- a group of containers that are deployed together on the same host, Docker- the containerization platform used to package your application and all its dependencies together in the form of containers to make sure your application works in any environment. Kubernetes is used with hybrid and multi-cloud deployments as well as edge computing --other applications listed these are the ones that stood out for me relating to our project 5 BASIC Steps of Building a Private Cloud: 1 Standardization -- software and hardware components used for deploying private cloud 2. Consolidation- trimming down equipment to what you need and decide what is able to be scaled up in the future 3. Virtualization- depends on intended delivery model and design of private cloud (Hyper-V, Xen, or VMware) 4. Automation -- modify IT processes to your liking 5. Orchestration -- final stage -- \"self-service\" ability to private cloud architecture- two main components -- a self-service portal and a service catalog Kubernetes in the cloud and on bare metal differ https://kubernetes.io/blog/2024/04/05/diy-create-your-own-cloud-with-kubernetes-part-1/ https://kubernetes.io/blog/2024/04/05/diy-create-your-own-cloud-with-kubernetes-part-2/ https://kubernetes.io/blog/2024/04/05/diy-create-your-own-cloud-with-kubernetes-part-3/ https://deploy.equinix.com/blog/guide-to-running-kubernetes-on-bare-metal/ Link- to install and set up kubernetes.","title":"Kubernetes Research"},{"location":"General/Engineering%20Documentation/Configuration%20and%20Installation%20Docs/Raid%20Discussion/","text":"Power Edge Specs Power Edge R710 x 2: CPU: 2 Cores: 16 Disks: 4 x 2.65GB 4 x RAID5 description: RAID bus controller, product: MegaRAID SAS 1078 description: SCSI Disk, size: 836GiB (898GB) Power Edge R730 : CPU: 2 Cores: 40 Disks: 8 x 3.6TB 1 x RAID0, 7 x RAID5 Total CPU: 6 Cores: 72 Disks: 8 x 2.65GB, 8 x 3.6TB Network: 12 ports Name Virtual cores Memory Disk Ephemeral m1.tiny 1 512 MB 1 GB 0 GB m1.small 1 2 GB 10 GB 20 GB m1.medium 2 4 GB 10 GB 40 GB m1.large 4 8 GB 10 GB 80 GB m1.xlarge 8 16 GB 10 GB 160 GB https://people.csail.mit.edu/jon/openstack-ops/openstack-ops-manual.pdf Example Node Spec Recommendations (Table 1.1) Controller -- 710A with RAID 5 CPU: 2 Cores: 12 Memory: 32GB Disk: 2 x 300GB Network: 2 x 10G ports Compute -- 730 with RAID 5 CPU: 2 Cores: 12 Memory: 128GB Disk: 2 X 600GB Network: 4 x 10G ports Storage -- 730 with RAID 5 CPU: 2 Cores: 12 Memory: 64GB Disk: 2 x 500GB, 24 x 600GB Raid Controller: PERC H710P Integrated RAID Controller, 1 GB NV Cache Network: 2 x 10G ports Network -- 710B with RAID 5 CPU: 1 Cores: 6 Memory: 32GB Disk: 2 x 500GB Network: 5 x 10G ports Total CPU: 7 \u2192 8 Cores: 42 \u2192 72 Memory: 256GB \u2192? Disk: 14.4GB \u2192 28.8TB Network: 13 x 10G ports \u219212 ports 3 Node Architecture Figures Chapter 2. Recommended specifications | Red Hat Product Documentation Three-Node Architecture Overview - Installing and Configuring OpenStack in Oracle\u00ae Solaris 11.2","title":"Power Edge Specs"},{"location":"General/Engineering%20Documentation/Configuration%20and%20Installation%20Docs/Raid%20Discussion/#power-edge-specs","text":"Power Edge R710 x 2: CPU: 2 Cores: 16 Disks: 4 x 2.65GB 4 x RAID5 description: RAID bus controller, product: MegaRAID SAS 1078 description: SCSI Disk, size: 836GiB (898GB) Power Edge R730 : CPU: 2 Cores: 40 Disks: 8 x 3.6TB 1 x RAID0, 7 x RAID5 Total CPU: 6 Cores: 72 Disks: 8 x 2.65GB, 8 x 3.6TB Network: 12 ports Name Virtual cores Memory Disk Ephemeral m1.tiny 1 512 MB 1 GB 0 GB m1.small 1 2 GB 10 GB 20 GB m1.medium 2 4 GB 10 GB 40 GB m1.large 4 8 GB 10 GB 80 GB m1.xlarge 8 16 GB 10 GB 160 GB https://people.csail.mit.edu/jon/openstack-ops/openstack-ops-manual.pdf","title":"Power Edge Specs"},{"location":"General/Engineering%20Documentation/Configuration%20and%20Installation%20Docs/Raid%20Discussion/#example-node-spec-recommendations-table-11","text":"Controller -- 710A with RAID 5 CPU: 2 Cores: 12 Memory: 32GB Disk: 2 x 300GB Network: 2 x 10G ports Compute -- 730 with RAID 5 CPU: 2 Cores: 12 Memory: 128GB Disk: 2 X 600GB Network: 4 x 10G ports Storage -- 730 with RAID 5 CPU: 2 Cores: 12 Memory: 64GB Disk: 2 x 500GB, 24 x 600GB Raid Controller: PERC H710P Integrated RAID Controller, 1 GB NV Cache Network: 2 x 10G ports Network -- 710B with RAID 5 CPU: 1 Cores: 6 Memory: 32GB Disk: 2 x 500GB Network: 5 x 10G ports Total CPU: 7 \u2192 8 Cores: 42 \u2192 72 Memory: 256GB \u2192? Disk: 14.4GB \u2192 28.8TB Network: 13 x 10G ports \u219212 ports","title":"Example Node Spec Recommendations (Table 1.1)"},{"location":"General/Engineering%20Documentation/Configuration%20and%20Installation%20Docs/Raid%20Discussion/#3-node-architecture-figures","text":"Chapter 2. Recommended specifications | Red Hat Product Documentation Three-Node Architecture Overview - Installing and Configuring OpenStack in Oracle\u00ae Solaris 11.2","title":"3 Node Architecture Figures"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/Proof%20of%20Concept/","text":"Proof of Concept: Project CLOUD CougarLab Online: U Develop (lol idk) Opportunity: Cloud technologies have become a dominant paradigm in the computer science industry. Many developers spend some or all of their time working on virtual machines accessible anywhere. CLOUD will provide a similar experience to CSU's undergraduate computer science students, acclimating them to the new industry standards. Undergraduate Computer Science students often need to set up new development environments that are sometimes used just once or twice. This can be a resource-intensive burden which causes later confusion. CLOUD will serve as a programming sandbox for students to experiment with code in a low-stakes environment. Premade images will allow students to choose the resources they need for a given project, from machine learning to web development. They'll be able to start projects quickly, gaining cloud and Linux experience along the way. Project definition: Project CLOUD intends to create a private cloud for development use by CSU computer science students. It will provide students with the infrastructure to create on-demand development environments. Project goals: Work Project requirements: Network access","title":"Proof of Concept"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/Raid%20Reassessment/","text":"RAID REASSESSMENT Purpose To get an overall architecture in what each overall node will be used for. After assessing any hardware constraints, we may encounter based on recommendations set forth by the OpenStack book 1.1. We formed a general idea that RAID 5 would initially be the desired level to partition the data and provide fault tolerance with low overhead on the drives. Power Edge Specs Power Edge R710 x 2: CPU: 2 Cores: 16 Disks: 4 x 2.65GB 4 x RAID5 description: RAID bus controller, product: MegaRAID SAS 1078 description: SCSI Disk, size: 836GiB (898GB) Power Edge R730 : CPU: 2 Cores: 40 Disks: 8 x 3.6TB 1 x RAID0, 7 x RAID5 Total CPU: 6 Cores: 72 Disks: 8 x 2.65GB, 8 x 3.6TB Network: 12 ports Name Virtual cores Memory Disk Ephemeral m1.tiny 1 512 MB 1 GB 0 GB m1.small 1 2 GB 10 GB 20 GB m1.medium 2 4 GB 10 GB 40 GB m1.large 4 8 GB 10 GB 80 GB m1.xlarge 8 16 GB 10 GB 160 GB https://people.csail.mit.edu/jon/openstack-ops/openstack-ops-manual.pdf Example Node Spec Recommendations (Table 1.1) Controller -- 710A with RAID 5 CPU: 2 Cores: 12 Memory: 32GB Disk: 2 x 300GB Network: 2 x 10G ports Compute -- 730 with RAID 5 CPU: 2 Cores: 12 Memory: 128GB Disk: 2 X 600GB Network: 4 x 10G ports Storage -- 730 with RAID 5 CPU: 2 Cores: 12 Memory: 64GB Disk: 2 x 500GB, 24 x 600GB Raid Controller: PERC H710P Integrated RAID Controller, 1 GB NV Cache Network: 2 x 10G ports Network -- 710B with RAID 5 CPU: 1 Cores: 6 Memory: 32GB Disk: 2 x 500GB Network: 5 x 10G ports Total CPU: 7 \u2192 8 Cores: 42 \u2192 72 Memory: 256GB \u2192? Disk: 14.4GB \u2192 28.8TB Network: 13 x 10G ports \u219212 ports 3 Node Architecture Figures Chapter 2. Recommended specifications | Red Hat Product Documentation Three-Node Architecture Overview - Installing and Configuring OpenStack in Oracle\u00ae Solaris 11.2","title":"RAID REASSESSMENT"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/Raid%20Reassessment/#raid-reassessment","text":"Purpose To get an overall architecture in what each overall node will be used for. After assessing any hardware constraints, we may encounter based on recommendations set forth by the OpenStack book 1.1. We formed a general idea that RAID 5 would initially be the desired level to partition the data and provide fault tolerance with low overhead on the drives.","title":"RAID REASSESSMENT"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/Raid%20Reassessment/#power-edge-specs","text":"Power Edge R710 x 2: CPU: 2 Cores: 16 Disks: 4 x 2.65GB 4 x RAID5 description: RAID bus controller, product: MegaRAID SAS 1078 description: SCSI Disk, size: 836GiB (898GB) Power Edge R730 : CPU: 2 Cores: 40 Disks: 8 x 3.6TB 1 x RAID0, 7 x RAID5 Total CPU: 6 Cores: 72 Disks: 8 x 2.65GB, 8 x 3.6TB Network: 12 ports Name Virtual cores Memory Disk Ephemeral m1.tiny 1 512 MB 1 GB 0 GB m1.small 1 2 GB 10 GB 20 GB m1.medium 2 4 GB 10 GB 40 GB m1.large 4 8 GB 10 GB 80 GB m1.xlarge 8 16 GB 10 GB 160 GB https://people.csail.mit.edu/jon/openstack-ops/openstack-ops-manual.pdf","title":"Power Edge Specs"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/Raid%20Reassessment/#example-node-spec-recommendations-table-11","text":"Controller -- 710A with RAID 5 CPU: 2 Cores: 12 Memory: 32GB Disk: 2 x 300GB Network: 2 x 10G ports Compute -- 730 with RAID 5 CPU: 2 Cores: 12 Memory: 128GB Disk: 2 X 600GB Network: 4 x 10G ports Storage -- 730 with RAID 5 CPU: 2 Cores: 12 Memory: 64GB Disk: 2 x 500GB, 24 x 600GB Raid Controller: PERC H710P Integrated RAID Controller, 1 GB NV Cache Network: 2 x 10G ports Network -- 710B with RAID 5 CPU: 1 Cores: 6 Memory: 32GB Disk: 2 x 500GB Network: 5 x 10G ports Total CPU: 7 \u2192 8 Cores: 42 \u2192 72 Memory: 256GB \u2192? Disk: 14.4GB \u2192 28.8TB Network: 13 x 10G ports \u219212 ports","title":"Example Node Spec Recommendations (Table 1.1)"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/Raid%20Reassessment/#3-node-architecture-figures","text":"Chapter 2. Recommended specifications | Red Hat Product Documentation Three-Node Architecture Overview - Installing and Configuring OpenStack in Oracle\u00ae Solaris 11.2","title":"3 Node Architecture Figures"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/SPIKE%20-%20OpenStack%20Architecture%20and%20Analysis/","text":"SPIKE: OpenStack Architecture and Analysis Objective Statement 1 OpenStack Components Introduction 1 Primary Components 1 Ironic 1 Nova 1 Glance 1 Neutron 1 Other 1 Download Options 1 Evaluation Tools 1 DevStack 1 MicroStack 2 Ansible 2 Juju 2 Other 2 Architecture 2 Known Pre-requirements 3 Next Steps and Closing Remarks 4 Optional Route of 3 Cycles 4 Future Work 4 Potential Stories 4 Sources 5 Objective Statement With this spike, we should be able to grasp the concepts of OpenStack and understand its services, be able to identify viable download and configuration tools, have a well crafted architecture model either using a professionally made example or self-made model, discern a list of pre-needed requirements and work items needed prior to the download of OpenStack with an overall address to the next steps after this spike. OpenStack Components Introduction Primary Components Ironic Will be what we use to provision and manage our Dell Power Edge machines. Uses PXE This will interact with OpenStack Compute (nova), Identity (keystone), Image service (glance), and Networking (neutron) Nova Glance - Neutron - Keystone - Other Download Options Evaluation Tools DevStack Will make major changes to a system and should only be run on VM's dedicated for this purpose. Official Evaluation tool Used for training, proof-of-concept and personal education. Not for production deployment, meant for developing and testing OpenStack itself. [Example Case:]{.underline} If we want to make changes to OpenStack, it'll be a terrible idea to go and do this on PROD. With DevStack, we can make those changes to an environment that is close to the deployed OpenStack instance and verify it works there before making changes to production. MicroStack Can be set up very quickly and installation is viewed as being easier than DevStack. Looks like a good choice as well and worth taking a further look at. DevOps Deployment Ansible Kolla Ansible Uses Docker containers to deploy OpenStack Minimum Requirements: 2 network interfaces 8GB main memory 40GB disk space OpenStack Ansible Uses LXC containers to deploy OpenStack Minimum Requirements: Multicore processors 10 GB for OpenStack-Ansible repository 100 GB of disk space for Control Plane 1/10GB Ethernet Bonded Network interfaces VLAN offloading Ansible is less opinionated on how we should deploy OpenStack, more flexible, provides defaults to get started, and provides additional optimization past initial setup. However Kolla Ansible states that it is highly opinionated. 'Kolla Ansible is highly opinionated out of the box, but allows for complete customization.' Kolla-ansible looks to be more supported and has more frequent upgrades. Juju Open source orchestration engine If we use Juju, can deploy using Charmed OpenStack, integrates well with Metal-As-A-Service. Will look more into this later. Is this same as IAAS? Other Puppet, Chef, Salt Older. Not the best for long term deployment. Architecture Will stick to the basics Horizon, Swift, Glance, Nova, Cinder, Neutron, & Keystone. Official recommended architecture for an OpenStack VPC design is located on the OpenStack Design page. Known Pre-requirements Debian Debian 12 (bookworm) Ubuntu Ubuntu 22.04 LTS (Jammy Jellyfish) Ubuntu 24.04 LTS (Noble Numbat) CentOS based CentOS Stream 9 Rocky Linux 9 Secure Shell (SSH) client and server that support public key authentication Python 3.8.*x* or 3.10.*x* en_US.UTF-8 as the locale At least 1/10 Gigabit Ethernet Jumbo Frames (Recommended) For Kolla-Ansible 2 network interfaces 8GB main memory 40GB disk space Next Steps and Closing Remarks Findings suggest to stick to the basics; Horizon, Swift, Glance, Nova, Cinder, & Neutron for Cycle 2. The team can discuss on their thoughts and give a response Sprint 3. As for the basics listed, we will have 6 weeks to complete them and be able to definetively define them as 'DONE'. There are plenty of other services to add but we may not get the opportunity to add them. Below will also be a list of Epics and Stories needed. How we define these items as done and if there a possible more items needed that were missed will be discussed after presentation. Optional Route of 3 Cycles Cycle 1: 2 Sprints (3wk/2wk) Primary Hardware Needs and Configs Cycle 2: 3 Sprints (2wk/2wk/2wk) General OpenStack Deployment and Secondary Hardware Needs Cycle 3: 2 Sprints (2wk/1wk) Secondary OpenStack Components and Wrap-up Future Work (Epics) Openstack Installation Horizon Neutron Glance Cinder Swift Nova Keystone Potential Stories Creating Jumbo Frames Server Clustering Addition of SSH Addition of Python 3.12.x (3.13 isn't a LTS system I believe) RAID cards configured Sources OpenStack-Ansible Deployment Guide --- openstack-ansible 30.0.1.dev3 documentation Overview --- openstack-ansible 30.1.0.dev44 documentation DevStack --- DevStack documentation MicroStack Documentation Deploying OpenStack in 2023 A Survey of Setting Up OpenStack","title":"SPIKE   OpenStack Architecture and Analysis"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/SPIKE%20-%20OpenStack%20Architecture%20and%20Analysis/#objective-statement","text":"With this spike, we should be able to grasp the concepts of OpenStack and understand its services, be able to identify viable download and configuration tools, have a well crafted architecture model either using a professionally made example or self-made model, discern a list of pre-needed requirements and work items needed prior to the download of OpenStack with an overall address to the next steps after this spike.","title":"Objective Statement"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/SPIKE%20-%20OpenStack%20Architecture%20and%20Analysis/#openstack-components-introduction","text":"","title":"OpenStack Components Introduction"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/SPIKE%20-%20OpenStack%20Architecture%20and%20Analysis/#primary-components","text":"","title":"Primary Components"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/SPIKE%20-%20OpenStack%20Architecture%20and%20Analysis/#ironic","text":"Will be what we use to provision and manage our Dell Power Edge machines. Uses PXE This will interact with OpenStack Compute (nova), Identity (keystone), Image service (glance), and Networking (neutron)","title":"Ironic"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/SPIKE%20-%20OpenStack%20Architecture%20and%20Analysis/#nova","text":"","title":"Nova"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/SPIKE%20-%20OpenStack%20Architecture%20and%20Analysis/#glance","text":"-","title":"Glance"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/SPIKE%20-%20OpenStack%20Architecture%20and%20Analysis/#neutron","text":"-","title":"Neutron"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/SPIKE%20-%20OpenStack%20Architecture%20and%20Analysis/#keystone","text":"","title":"Keystone"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/SPIKE%20-%20OpenStack%20Architecture%20and%20Analysis/#-","text":"","title":"-"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/SPIKE%20-%20OpenStack%20Architecture%20and%20Analysis/#other","text":"","title":"Other"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/SPIKE%20-%20OpenStack%20Architecture%20and%20Analysis/#download-options","text":"","title":"Download Options"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/SPIKE%20-%20OpenStack%20Architecture%20and%20Analysis/#evaluation-tools","text":"","title":"Evaluation Tools"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/SPIKE%20-%20OpenStack%20Architecture%20and%20Analysis/#devstack","text":"Will make major changes to a system and should only be run on VM's dedicated for this purpose. Official Evaluation tool Used for training, proof-of-concept and personal education. Not for production deployment, meant for developing and testing OpenStack itself. [Example Case:]{.underline} If we want to make changes to OpenStack, it'll be a terrible idea to go and do this on PROD. With DevStack, we can make those changes to an environment that is close to the deployed OpenStack instance and verify it works there before making changes to production.","title":"DevStack"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/SPIKE%20-%20OpenStack%20Architecture%20and%20Analysis/#microstack","text":"Can be set up very quickly and installation is viewed as being easier than DevStack. Looks like a good choice as well and worth taking a further look at.","title":"MicroStack"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/SPIKE%20-%20OpenStack%20Architecture%20and%20Analysis/#devops-deployment","text":"","title":"DevOps Deployment"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/SPIKE%20-%20OpenStack%20Architecture%20and%20Analysis/#ansible","text":"Kolla Ansible Uses Docker containers to deploy OpenStack Minimum Requirements: 2 network interfaces 8GB main memory 40GB disk space OpenStack Ansible Uses LXC containers to deploy OpenStack Minimum Requirements: Multicore processors 10 GB for OpenStack-Ansible repository 100 GB of disk space for Control Plane 1/10GB Ethernet Bonded Network interfaces VLAN offloading Ansible is less opinionated on how we should deploy OpenStack, more flexible, provides defaults to get started, and provides additional optimization past initial setup. However Kolla Ansible states that it is highly opinionated. 'Kolla Ansible is highly opinionated out of the box, but allows for complete customization.' Kolla-ansible looks to be more supported and has more frequent upgrades.","title":"Ansible"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/SPIKE%20-%20OpenStack%20Architecture%20and%20Analysis/#juju","text":"Open source orchestration engine If we use Juju, can deploy using Charmed OpenStack, integrates well with Metal-As-A-Service. Will look more into this later. Is this same as IAAS?","title":"Juju"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/SPIKE%20-%20OpenStack%20Architecture%20and%20Analysis/#other_1","text":"Puppet, Chef, Salt Older. Not the best for long term deployment.","title":"Other"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/SPIKE%20-%20OpenStack%20Architecture%20and%20Analysis/#architecture","text":"Will stick to the basics Horizon, Swift, Glance, Nova, Cinder, Neutron, & Keystone. Official recommended architecture for an OpenStack VPC design is located on the OpenStack Design page.","title":"Architecture"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/SPIKE%20-%20OpenStack%20Architecture%20and%20Analysis/#known-pre-requirements","text":"Debian Debian 12 (bookworm) Ubuntu Ubuntu 22.04 LTS (Jammy Jellyfish) Ubuntu 24.04 LTS (Noble Numbat) CentOS based CentOS Stream 9 Rocky Linux 9 Secure Shell (SSH) client and server that support public key authentication Python 3.8.*x* or 3.10.*x* en_US.UTF-8 as the locale At least 1/10 Gigabit Ethernet Jumbo Frames (Recommended) For Kolla-Ansible 2 network interfaces 8GB main memory 40GB disk space","title":"Known Pre-requirements"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/SPIKE%20-%20OpenStack%20Architecture%20and%20Analysis/#next-steps-and-closing-remarks","text":"Findings suggest to stick to the basics; Horizon, Swift, Glance, Nova, Cinder, & Neutron for Cycle 2. The team can discuss on their thoughts and give a response Sprint 3. As for the basics listed, we will have 6 weeks to complete them and be able to definetively define them as 'DONE'. There are plenty of other services to add but we may not get the opportunity to add them. Below will also be a list of Epics and Stories needed. How we define these items as done and if there a possible more items needed that were missed will be discussed after presentation.","title":"Next Steps and Closing Remarks"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/SPIKE%20-%20OpenStack%20Architecture%20and%20Analysis/#optional-route-of-3-cycles","text":"Cycle 1: 2 Sprints (3wk/2wk) Primary Hardware Needs and Configs Cycle 2: 3 Sprints (2wk/2wk/2wk) General OpenStack Deployment and Secondary Hardware Needs Cycle 3: 2 Sprints (2wk/1wk) Secondary OpenStack Components and Wrap-up","title":"Optional Route of 3 Cycles"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/SPIKE%20-%20OpenStack%20Architecture%20and%20Analysis/#future-work-epics","text":"Openstack Installation Horizon Neutron Glance Cinder Swift Nova Keystone","title":"Future Work (Epics)"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/SPIKE%20-%20OpenStack%20Architecture%20and%20Analysis/#potential-stories","text":"Creating Jumbo Frames Server Clustering Addition of SSH Addition of Python 3.12.x (3.13 isn't a LTS system I believe) RAID cards configured","title":"Potential Stories"},{"location":"General/Engineering%20Documentation/POCs%20and%20SPIKEs/SPIKE%20-%20OpenStack%20Architecture%20and%20Analysis/#sources","text":"OpenStack-Ansible Deployment Guide --- openstack-ansible 30.0.1.dev3 documentation Overview --- openstack-ansible 30.1.0.dev44 documentation DevStack --- DevStack documentation MicroStack Documentation Deploying OpenStack in 2023 A Survey of Setting Up OpenStack","title":"Sources"},{"location":"Networking%20Setup/Navigating%20Configuration%20Files/","text":"","title":"Navigating Configuration Files"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Cisco%20Switch%20First%20Time%20Setup/","text":"First Time Configurations in CLI Objective Accessing the CLI Configure non-volatile ram config files of Cisco Switch Getting to CLI To get to the CLI, walkthrough and complete Reading Serial Data on Cisco 2960-X Switch with Windows 11 PC First Time Installation Follow through pages 70-74 in the Completing the Setup in the Catalyst 2960-X Switch Hardware Installation Guide.","title":"First Time Configurations in CLI"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Cisco%20Switch%20First%20Time%20Setup/#first-time-configurations-in-cli","text":"","title":"First Time Configurations in CLI"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Cisco%20Switch%20First%20Time%20Setup/#objective","text":"Accessing the CLI Configure non-volatile ram config files of Cisco Switch","title":"Objective"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Cisco%20Switch%20First%20Time%20Setup/#getting-to-cli","text":"To get to the CLI, walkthrough and complete Reading Serial Data on Cisco 2960-X Switch with Windows 11 PC","title":"Getting to CLI"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Cisco%20Switch%20First%20Time%20Setup/#first-time-installation","text":"Follow through pages 70-74 in the Completing the Setup in the Catalyst 2960-X Switch Hardware Installation Guide.","title":"First Time Installation"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Connecting%20Servers%20to%20Switch%20VLAN/","text":"Connecting Servers to VLAN Objective Obtain for Ethernet Ports Names Configure the ports to allow them to connect to the VLAN Physically connect every port on all servers to their designated interface range on the switch. Please refer to Configuring VLAN for the port numbers being used. Now that we are at the final home stretch of setting up the internal infrastructure of the CDG project, all that is left for us is configuring each port on our server and plugging them all in. Log into each server and repeat all steps below . Find Ethernet Port Names $ ip link show Create Net Plan File To be able to allow other devices on the switch to ping the server, you will need to configure you network configuration files. For Ubuntu, you can find the new configuration files at /etc/netplan/*.yaml . Ubuntu server generates Netplan configuration file for system-networkd named 01-netcfg.yaml . sudo nano /etc/netplan/01-netcfg.yaml This will bring you to a yaml file you\u2019ll need to configure. YAML is a human-readable data serialization language and is commonly used for configuration files and saving application state. It is similar to other languages such as XML and JSON. Example : network: Version: 2 Renderer: NetworkManager/ networkd ethernets: DEVICE_NAME: Dhcp4: yes/no Addresses: [IP_ADDRESS/NETMASK] Gateway: GATEWAY Nameservers: Addresses: [NAMESERVER_1, NAMESERVER_2] Where DEVICE_NAME : Name of the interface. Dhcp4 : yes or no depending upon dynamic or static IP > addressing Addresses : IP address of the device in prefix notation. Do not > use netmask. Gateway : Gateway IP address to connect to an outside network > (other VLANs) Nameservers : Address of DNS name servers Configure Net Plan File Network Plan for Controller Node (Dell PowerEdge 710 A) network: version: 2 renderer: networkd ethernets: eno1: dhcp4: no addresses: [10.0.11.10/24] gateway4: 10.0.11.1 nameservers: addresses: [8.8.8.8, 8.8.4.4] eno2: dhcp4: no addresses: [10.0.11.20/24] eno3: dhcp4: no addresses: [10.0.11.30/24] eno4: dhcp4: no addresses: [10.0.11.40/24] Network Plan for Network Node (Dell PowerEdge 710 B) network: version: 2 renderer: networkd ethernets: eno1: dhcp4: no addresses: [10.0.21.10/24] gateway4: 10.0.21.1 nameservers: addresses: [8.8.8.8, 8.8.4.4] eno2: dhcp4: no addresses: [10.0.21.20/24] eno3: dhcp4: no addresses: [10.0.21.30/24] eno4: dhcp4: no addresses: [10.0.21.40/24] Network Plan for Compute/Storage Node (Dell PowerEdge 730) version: 2 renderer: networkd ethernets: eno1: dhcp4: no addresses: [10.0.31.10/24] gateway4: 10.0.31.1 nameservers: addresses: [8.8.8.8, 8.8.4.4] eno2: dhcp4: no addresses: [10.0.31.20/24] eno3: dhcp4: no addresses: [10.0.31.30/24] eno4: dhcp4: no addresses: [10.0.31.40/24]","title":"Connecting Servers to VLAN"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Connecting%20Servers%20to%20Switch%20VLAN/#connecting-servers-to-vlan","text":"","title":"Connecting Servers to VLAN"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Connecting%20Servers%20to%20Switch%20VLAN/#objective","text":"Obtain for Ethernet Ports Names Configure the ports to allow them to connect to the VLAN Physically connect every port on all servers to their designated interface range on the switch. Please refer to Configuring VLAN for the port numbers being used. Now that we are at the final home stretch of setting up the internal infrastructure of the CDG project, all that is left for us is configuring each port on our server and plugging them all in. Log into each server and repeat all steps below .","title":"Objective"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Connecting%20Servers%20to%20Switch%20VLAN/#find-ethernet-port-names","text":"$ ip link show","title":"Find Ethernet Port Names"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Connecting%20Servers%20to%20Switch%20VLAN/#create-net-plan-file","text":"To be able to allow other devices on the switch to ping the server, you will need to configure you network configuration files. For Ubuntu, you can find the new configuration files at /etc/netplan/*.yaml . Ubuntu server generates Netplan configuration file for system-networkd named 01-netcfg.yaml . sudo nano /etc/netplan/01-netcfg.yaml This will bring you to a yaml file you\u2019ll need to configure. YAML is a human-readable data serialization language and is commonly used for configuration files and saving application state. It is similar to other languages such as XML and JSON. Example : network: Version: 2 Renderer: NetworkManager/ networkd ethernets: DEVICE_NAME: Dhcp4: yes/no Addresses: [IP_ADDRESS/NETMASK] Gateway: GATEWAY Nameservers: Addresses: [NAMESERVER_1, NAMESERVER_2] Where DEVICE_NAME : Name of the interface. Dhcp4 : yes or no depending upon dynamic or static IP > addressing Addresses : IP address of the device in prefix notation. Do not > use netmask. Gateway : Gateway IP address to connect to an outside network > (other VLANs) Nameservers : Address of DNS name servers","title":"Create Net Plan File"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Connecting%20Servers%20to%20Switch%20VLAN/#configure-net-plan-file","text":"","title":"Configure Net Plan File"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Connecting%20Servers%20to%20Switch%20VLAN/#network-plan-for-controller-node-dell-poweredge-710-a","text":"network: version: 2 renderer: networkd ethernets: eno1: dhcp4: no addresses: [10.0.11.10/24] gateway4: 10.0.11.1 nameservers: addresses: [8.8.8.8, 8.8.4.4] eno2: dhcp4: no addresses: [10.0.11.20/24] eno3: dhcp4: no addresses: [10.0.11.30/24] eno4: dhcp4: no addresses: [10.0.11.40/24]","title":"Network Plan for Controller Node (Dell PowerEdge 710 A)"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Connecting%20Servers%20to%20Switch%20VLAN/#network-plan-for-network-node-dell-poweredge-710-b","text":"network: version: 2 renderer: networkd ethernets: eno1: dhcp4: no addresses: [10.0.21.10/24] gateway4: 10.0.21.1 nameservers: addresses: [8.8.8.8, 8.8.4.4] eno2: dhcp4: no addresses: [10.0.21.20/24] eno3: dhcp4: no addresses: [10.0.21.30/24] eno4: dhcp4: no addresses: [10.0.21.40/24]","title":"Network Plan for Network Node (Dell PowerEdge 710 B)"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Connecting%20Servers%20to%20Switch%20VLAN/#network-plan-for-computestorage-node-dell-poweredge-730","text":"version: 2 renderer: networkd ethernets: eno1: dhcp4: no addresses: [10.0.31.10/24] gateway4: 10.0.31.1 nameservers: addresses: [8.8.8.8, 8.8.4.4] eno2: dhcp4: no addresses: [10.0.31.20/24] eno3: dhcp4: no addresses: [10.0.31.30/24] eno4: dhcp4: no addresses: [10.0.31.40/24]","title":"Network Plan for Compute/Storage Node (Dell PowerEdge 730)"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Internet%20Access%20via%20Wall%20Port/","text":"Internet Access via Wall Port Authors: Jaden Jefferson Last Updated: 24 Mar 2025 Objective Convert to an L3 switch Set default-gateway and ip route to that of the universities wall port Set VLAN 2 to allow DHCP CLI Set Up switch1>enable switch1#config t switch1#ip routing switch1#ip route 0.0.0.0 0.0.0.0 10.12.112.1 switch1(config)# interface vlan 2 switch1(config-if)# ip address dhcp switch1(config-if)# no shutdown switch1(config-if)# end switch1#write memory Physical Set Up Plug an ethernet cable of cat5 or 6 into any port 7 through 12. If unsure of the ports contained in vlan 2. Run show vlan brief if unsure. Plug the other end into the wall port that contains the default-gateway Confirming switch1# show running-config | include default-gateway switch1# show ip route switch1# show ip interface brief switch1# show interfaces vlan 2 Testing switch1# ping 10.12.112.1 switch1# ping 8.8.8.8 Test 1: Pinging 8.8.8.8 - Internet Test 2: Pinging 10.8.112.1 - Default Gateway","title":"Internet Access via Wall Port"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Internet%20Access%20via%20Wall%20Port/#internet-access-via-wall-port","text":"Authors: Jaden Jefferson Last Updated: 24 Mar 2025","title":"Internet Access via Wall Port"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Internet%20Access%20via%20Wall%20Port/#objective","text":"Convert to an L3 switch Set default-gateway and ip route to that of the universities wall port Set VLAN 2 to allow DHCP","title":"Objective"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Internet%20Access%20via%20Wall%20Port/#cli-set-up","text":"switch1>enable switch1#config t switch1#ip routing switch1#ip route 0.0.0.0 0.0.0.0 10.12.112.1 switch1(config)# interface vlan 2 switch1(config-if)# ip address dhcp switch1(config-if)# no shutdown switch1(config-if)# end switch1#write memory","title":"CLI Set Up"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Internet%20Access%20via%20Wall%20Port/#physical-set-up","text":"Plug an ethernet cable of cat5 or 6 into any port 7 through 12. If unsure of the ports contained in vlan 2. Run show vlan brief if unsure. Plug the other end into the wall port that contains the default-gateway","title":"Physical Set Up"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Internet%20Access%20via%20Wall%20Port/#confirming","text":"switch1# show running-config | include default-gateway switch1# show ip route switch1# show ip interface brief switch1# show interfaces vlan 2","title":"Confirming"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Internet%20Access%20via%20Wall%20Port/#testing","text":"switch1# ping 10.12.112.1 switch1# ping 8.8.8.8 Test 1: Pinging 8.8.8.8 - Internet Test 2: Pinging 10.8.112.1 - Default Gateway","title":"Testing"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Reading%20Serial%20Data%20on%20Cisco%20Switch%20with%20Windows%2011%20PC/","text":"Reading Serial Data on Cisco Switch with Windows 11 Authors: Jaden Jefferson Last Updated: 6 Mar 2025 How to Read Serial Data on a Cisco 2960-X Switch using Windows 11 Objectives Read Cisco serial data transmitted over console port Begin initial configurations through Cisco CLI Ping switch from PC Ping PC from switch Note: If your device has already been set up and you would like to read serial data from your device, please read Getting Port Driver and PuTTY and Step 6 of First Time Setup Getting Port Driver and PuTTY Serial data will be transmitted from the switch to your PC using the switch's console port and your PC's USB port. However, your system may not be able to read this data this coming on with pre-existing drivers on your system. For this, please download the Cisco port driver at Software Download - Cisco Systems. For this you will need to create a Cisco account profile and download the the zip file. For more information on this process, please follow the attached README file. For PuTTY , here is an available download . First Time Setup Note: This is only needed if using a brand new switch or one that has been wiped. Before diving head first into setup it is essential that you know more about your device and have a good foundational knowledge of it. If you haven't already, read 1-19 of Catalyst 2960-X Switch Hardware Installation Guide. Below we will complete steps 1-6 in Getting Started Guide . You are encouraged to read through the site if also configuring the physical hardware components for the first time outside of wiring. This is needed to verify all needed materials are owned. The provided Cisco document is outdated so please read carefully. We will use multiple documents for this configuration pointing to the exact sections needed for each. Step 6 Now that you have completed steps 1-5, we should now be able to read serial data via the console port. Using the micro-B console port, plug the USB micro-B port into the switch and the USB-A port into your laptop. a. You will also be able to use any console port rj-45 or micro-b to USB-B for serial data to be transmitted to your pc. Open Device Manager Check the COM port of your new plugged in device Open Putty Insert the Serial COM Port seen in Device Manager, select serial speed 9600, Connect type Serial and Telnet, Then click Open","title":"Reading Serial Data on Cisco Switch with Windows 11"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Reading%20Serial%20Data%20on%20Cisco%20Switch%20with%20Windows%2011%20PC/#reading-serial-data-on-cisco-switch-with-windows-11","text":"Authors: Jaden Jefferson Last Updated: 6 Mar 2025 How to Read Serial Data on a Cisco 2960-X Switch using Windows 11","title":"Reading Serial Data on Cisco Switch with Windows 11"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Reading%20Serial%20Data%20on%20Cisco%20Switch%20with%20Windows%2011%20PC/#objectives","text":"Read Cisco serial data transmitted over console port Begin initial configurations through Cisco CLI Ping switch from PC Ping PC from switch Note: If your device has already been set up and you would like to read serial data from your device, please read Getting Port Driver and PuTTY and Step 6 of First Time Setup","title":"Objectives"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Reading%20Serial%20Data%20on%20Cisco%20Switch%20with%20Windows%2011%20PC/#getting-port-driver-and-putty","text":"Serial data will be transmitted from the switch to your PC using the switch's console port and your PC's USB port. However, your system may not be able to read this data this coming on with pre-existing drivers on your system. For this, please download the Cisco port driver at Software Download - Cisco Systems. For this you will need to create a Cisco account profile and download the the zip file. For more information on this process, please follow the attached README file. For PuTTY , here is an available download .","title":"Getting Port Driver and PuTTY"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Reading%20Serial%20Data%20on%20Cisco%20Switch%20with%20Windows%2011%20PC/#first-time-setup","text":"Note: This is only needed if using a brand new switch or one that has been wiped. Before diving head first into setup it is essential that you know more about your device and have a good foundational knowledge of it. If you haven't already, read 1-19 of Catalyst 2960-X Switch Hardware Installation Guide. Below we will complete steps 1-6 in Getting Started Guide . You are encouraged to read through the site if also configuring the physical hardware components for the first time outside of wiring. This is needed to verify all needed materials are owned. The provided Cisco document is outdated so please read carefully. We will use multiple documents for this configuration pointing to the exact sections needed for each.","title":"First Time Setup"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/Reading%20Serial%20Data%20on%20Cisco%20Switch%20with%20Windows%2011%20PC/#step-6","text":"Now that you have completed steps 1-5, we should now be able to read serial data via the console port. Using the micro-B console port, plug the USB micro-B port into the switch and the USB-A port into your laptop. a. You will also be able to use any console port rj-45 or micro-b to USB-B for serial data to be transmitted to your pc. Open Device Manager Check the COM port of your new plugged in device Open Putty Insert the Serial COM Port seen in Device Manager, select serial speed 9600, Connect type Serial and Telnet, Then click Open","title":"Step 6"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/VLAN%20Configuration/","text":"Authors: Jaden Jefferson Last Updated: 12 Mar 2025 Cisco Switch VLAN Configuration Objective A Virtual Local Area Network (VLAN) allows you to logically segment a Local Area Network (LAN) into different broadcast domains. In scenarios where sensitive data may be broadcast on a network, VLANs can be created to enhance security by designating a broadcast to a specific VLAN. Only users that belong to a VLAN are able to access and manipulate the data on that VLAN. You can configure the ports and specify whether the port should be in access or trunk mode, and assign specific ports to VLANs. This article provides instructions on how to configure an interface VLAN as an access or trunk port on your switch through the Command Line Interface (CLI). Introduction VLAN is a network that is usually segmented by function or application. VLANs behave much like physical LANs, but you can group hosts even if they are not physically co-located. A switch port can belong to a VLAN. Unicast, broadcast, and multicast packets are forwarded and flooded out ports in the same VLAN. VLANs can also be used to enhance performance by reducing the need to send broadcasts and multicasts to unnecessary destinations. It also eases network configuration by logically connecting devices without physically relocating those devices. Enter the Cisco CLI For this you will need PuTTY, the Cisco usb console driver , and a USB-mini to USB-A wire. If you do not have these, please obtain them and refer to the previous document on reading serial data from a Cisco Switch. To complete the goal set for this document and completing the architecture, this will be the only exit needed from the walkthrough guide as you will first need access to the Cisco CLI to begin. If you already have access or once you have access, you may proceed to the next step. Enable Exec mode to begin switch1>enable to enable exec mode password:password Setting up Default VLAN #1 switch1#config terminal Commands not needed as name will stay default ~~switch1(config) #vlan 1~~ ~~switch1(config-vlan) # name~~ ~~switch1(config-vlan) #exit~~ switch1(config) #interface range gigabitethernet1/0/1-6 switch1(config-if-range) #switchport mode access switch1(config-if-range) #switchport access vlan 1 switch1(config-if-range) #exit switch1(config) # interface vlan 1 switch1(config-if) #ip address 192.168.100.1 255.255.255.0 switch1(config-if) #end switch1#show vlan Setting up ExternalUplink VLAN #2 A static ip address is unneeded following the next document, vlan 2 will being using dhcp. Feel free to skip this configuration set switch1#config terminal switch1(config) #vlan 2 switch1(config-vlan) #name ExternalUplink switch1(config-vlan) #exit switch1(config) #interface range gigabitethernet1/0/7-12 switch1(config-if-range) #switchport mode access switch1(config-if-range) #switchport access vlan 2 switch1(config-if-range) #~~exit~~ end ** ~~switch1#(config) #interface vlan 2~~ ~~switch1#(config-if) #ip address 10.0.2.1 255.255.255.0~~ ~~switch1#(config-if) #end~~ switch1#show vlan Setting up Controller VLAN #11 switch1#config terminal switch1(config) #vlan 11 switch1(config-vlan) #name Controller switch1(config-vlan) #exit switch1(config) #interface range gigabitethernet1/0/13-18 switch1(config-if-range) #switchport mode access switch1(config-if-range) #switchport access vlan 11 switch1(config-if-range) #exit switch1#(config) #interface vlan 11 switch1#(config-if) #ip address 10.0.11.1 255.255.255.0 switch1#(config-if) #end switch1#show vlan Setting up Network VLAN #21 switch1#config terminal switch1(config) #vlan 21 switch1(config-vlan) #name Network switch1(config-vlan) #exit switch1(config) #interface range gigabitethernet1/0/19-24 switch1(config-if-range) #switchport mode access switch1(config-if-range) #switchport access vlan 21 switch1(config-if-range) #exit switch1#(config) #interface vlan 21 switch1#(config-if) #ip address 10.0.21.1 255.255.255.0 switch1#(config-if) #end switch1#show vlan Setting up Compute VLAN #31 switch1#config terminal switch1(config) #vlan 31 switch1(config-vlan) #name Compute switch1(config-vlan) #exit switch1(config) #interface range gigabitethernet1/0/25-30 switch1(config-if-range) #switchport mode access switch1(config-if-range) #switchport access vlan 31 switch1(config-if-range) #exit switch1#(config) #interface vlan 31 switch1#(config-if) #ip address 10.0.31.1 255.255.255.0 switch1#(config-if) #end switch1#show vlan Setting up FutureUse1 VLAN #41 switch1#config terminal switch1(config) #vlan 41 switch1(config-vlan) #name FutureUse1 switch1(config-vlan) #exit switch1(config) #interface range gigabitethernet1/0/31-36 switch1(config-if-range) #switchport mode access switch1(config-if-range) #switchport access vlan 41 switch1(config-if-range) #exit switch1#(config) #interface vlan 41 switch1#(config-if) #ip address 10.0.41.1 255.255.255.0 switch1#(config-if) #end switch1#show vlan Setting up FutureUse2 VLAN #51 switch1#config terminal switch1(config) #vlan 51 switch1(config-vlan) #name FutureUse2 switch1(config-vlan) #exit switch1(config) #interface range gigabitethernet1/0/37-42 switch1(config-if-range) #switchport mode access switch1(config-if-range) #switchport access vlan 51 switch1(config-if-range) #exit switch1#(config) #interface vlan 51 switch1#(config-if) #ip address 10.0.51.1 255.255.255.0 switch1#(config-if) #end switch1#show vlan Setting up FutureUse3 VLAN #61 switch1#config terminal switch1(config) #vlan 61 switch1(config-vlan) #name FutureUse2 switch1(config-vlan) #exit switch1(config) #interface range gigabitethernet1/0/43-48 switch1(config-if-range) #switchport mode access switch1(config-if-range) #switchport access vlan 51 switch1(config-if-range) #exit switch1#(config) #interface vlan 51 switch1#(config-if) #ip address 10.0.51.1 255.255.255.0 switch1#(config-if) #end switch1#show vlan Verify and Save Give everything one last look through and verify it looks good. switch1#show interfaces switchport switch1#show vlan switch1# copy running-config startup-config Click ENTER to select [startup-config] for destination filename After [OK] switch1#show vlan","title":"VLAN Configuration"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/VLAN%20Configuration/#cisco-switch-vlan-configuration","text":"","title":"Cisco Switch VLAN Configuration"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/VLAN%20Configuration/#objective","text":"A Virtual Local Area Network (VLAN) allows you to logically segment a Local Area Network (LAN) into different broadcast domains. In scenarios where sensitive data may be broadcast on a network, VLANs can be created to enhance security by designating a broadcast to a specific VLAN. Only users that belong to a VLAN are able to access and manipulate the data on that VLAN. You can configure the ports and specify whether the port should be in access or trunk mode, and assign specific ports to VLANs. This article provides instructions on how to configure an interface VLAN as an access or trunk port on your switch through the Command Line Interface (CLI).","title":"Objective"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/VLAN%20Configuration/#introduction","text":"VLAN is a network that is usually segmented by function or application. VLANs behave much like physical LANs, but you can group hosts even if they are not physically co-located. A switch port can belong to a VLAN. Unicast, broadcast, and multicast packets are forwarded and flooded out ports in the same VLAN. VLANs can also be used to enhance performance by reducing the need to send broadcasts and multicasts to unnecessary destinations. It also eases network configuration by logically connecting devices without physically relocating those devices.","title":"Introduction"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/VLAN%20Configuration/#enter-the-cisco-cli","text":"For this you will need PuTTY, the Cisco usb console driver , and a USB-mini to USB-A wire. If you do not have these, please obtain them and refer to the previous document on reading serial data from a Cisco Switch. To complete the goal set for this document and completing the architecture, this will be the only exit needed from the walkthrough guide as you will first need access to the Cisco CLI to begin. If you already have access or once you have access, you may proceed to the next step.","title":"Enter the Cisco CLI"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/VLAN%20Configuration/#enable-exec-mode-to-begin","text":"switch1>enable to enable exec mode password:password","title":"Enable Exec mode to begin"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/VLAN%20Configuration/#setting-up-default-vlan-1","text":"switch1#config terminal Commands not needed as name will stay default ~~switch1(config) #vlan 1~~ ~~switch1(config-vlan) # name~~ ~~switch1(config-vlan) #exit~~ switch1(config) #interface range gigabitethernet1/0/1-6 switch1(config-if-range) #switchport mode access switch1(config-if-range) #switchport access vlan 1 switch1(config-if-range) #exit switch1(config) # interface vlan 1 switch1(config-if) #ip address 192.168.100.1 255.255.255.0 switch1(config-if) #end switch1#show vlan","title":"Setting up Default VLAN #1"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/VLAN%20Configuration/#setting-up-externaluplink-vlan-2","text":"A static ip address is unneeded following the next document, vlan 2 will being using dhcp. Feel free to skip this configuration set switch1#config terminal switch1(config) #vlan 2 switch1(config-vlan) #name ExternalUplink switch1(config-vlan) #exit switch1(config) #interface range gigabitethernet1/0/7-12 switch1(config-if-range) #switchport mode access switch1(config-if-range) #switchport access vlan 2 switch1(config-if-range) #~~exit~~ end ** ~~switch1#(config) #interface vlan 2~~ ~~switch1#(config-if) #ip address 10.0.2.1 255.255.255.0~~ ~~switch1#(config-if) #end~~ switch1#show vlan","title":"Setting up ExternalUplink VLAN #2"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/VLAN%20Configuration/#setting-up-controller-vlan-11","text":"switch1#config terminal switch1(config) #vlan 11 switch1(config-vlan) #name Controller switch1(config-vlan) #exit switch1(config) #interface range gigabitethernet1/0/13-18 switch1(config-if-range) #switchport mode access switch1(config-if-range) #switchport access vlan 11 switch1(config-if-range) #exit switch1#(config) #interface vlan 11 switch1#(config-if) #ip address 10.0.11.1 255.255.255.0 switch1#(config-if) #end switch1#show vlan","title":"Setting up Controller VLAN #11"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/VLAN%20Configuration/#setting-up-network-vlan-21","text":"switch1#config terminal switch1(config) #vlan 21 switch1(config-vlan) #name Network switch1(config-vlan) #exit switch1(config) #interface range gigabitethernet1/0/19-24 switch1(config-if-range) #switchport mode access switch1(config-if-range) #switchport access vlan 21 switch1(config-if-range) #exit switch1#(config) #interface vlan 21 switch1#(config-if) #ip address 10.0.21.1 255.255.255.0 switch1#(config-if) #end switch1#show vlan","title":"Setting up Network VLAN #21"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/VLAN%20Configuration/#setting-up-compute-vlan-31","text":"switch1#config terminal switch1(config) #vlan 31 switch1(config-vlan) #name Compute switch1(config-vlan) #exit switch1(config) #interface range gigabitethernet1/0/25-30 switch1(config-if-range) #switchport mode access switch1(config-if-range) #switchport access vlan 31 switch1(config-if-range) #exit switch1#(config) #interface vlan 31 switch1#(config-if) #ip address 10.0.31.1 255.255.255.0 switch1#(config-if) #end switch1#show vlan","title":"Setting up Compute VLAN #31"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/VLAN%20Configuration/#setting-up-futureuse1-vlan-41","text":"switch1#config terminal switch1(config) #vlan 41 switch1(config-vlan) #name FutureUse1 switch1(config-vlan) #exit switch1(config) #interface range gigabitethernet1/0/31-36 switch1(config-if-range) #switchport mode access switch1(config-if-range) #switchport access vlan 41 switch1(config-if-range) #exit switch1#(config) #interface vlan 41 switch1#(config-if) #ip address 10.0.41.1 255.255.255.0 switch1#(config-if) #end switch1#show vlan","title":"Setting up FutureUse1 VLAN #41"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/VLAN%20Configuration/#setting-up-futureuse2-vlan-51","text":"switch1#config terminal switch1(config) #vlan 51 switch1(config-vlan) #name FutureUse2 switch1(config-vlan) #exit switch1(config) #interface range gigabitethernet1/0/37-42 switch1(config-if-range) #switchport mode access switch1(config-if-range) #switchport access vlan 51 switch1(config-if-range) #exit switch1#(config) #interface vlan 51 switch1#(config-if) #ip address 10.0.51.1 255.255.255.0 switch1#(config-if) #end switch1#show vlan","title":"Setting up FutureUse2 VLAN #51"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/VLAN%20Configuration/#setting-up-futureuse3-vlan-61","text":"switch1#config terminal switch1(config) #vlan 61 switch1(config-vlan) #name FutureUse2 switch1(config-vlan) #exit switch1(config) #interface range gigabitethernet1/0/43-48 switch1(config-if-range) #switchport mode access switch1(config-if-range) #switchport access vlan 51 switch1(config-if-range) #exit switch1#(config) #interface vlan 51 switch1#(config-if) #ip address 10.0.51.1 255.255.255.0 switch1#(config-if) #end switch1#show vlan","title":"Setting up FutureUse3 VLAN #61"},{"location":"Networking%20Setup/CDG%20Network%20Configurations/VLAN%20Configuration/#verify-and-save","text":"Give everything one last look through and verify it looks good. switch1#show interfaces switchport switch1#show vlan switch1# copy running-config startup-config Click ENTER to select [startup-config] for destination filename After [OK] switch1#show vlan","title":"Verify and Save"},{"location":"Networking%20Setup/CDG%20Network%20Info/Cisco%20Switch%20IP%20and%20MAC%20Addresses/","text":"IP and MAC Addresses of Cisco Switch switch1#sh int | i (.* line protocol is )|(.* address is)\\ Vlan1 is up, line protocol is down\\ Hardware is EtherSVI, address is 84eb.ef6b.1240 (bia 84eb.ef6b.1240)\\ Internet address is 192.168.100.1/24 Vlan2 is up, line protocol is down\\ Hardware is EtherSVI, address is 84eb.ef6b.1241 (bia 84eb.ef6b.1241) Vlan11 is up, line protocol is down\\ Hardware is EtherSVI, address is 84eb.ef6b.1242 (bia 84eb.ef6b.1242)\\ Internet address is 10.0.11.1/24 Vlan21 is up, line protocol is down\\ Hardware is EtherSVI, address is 84eb.ef6b.1243 (bia 84eb.ef6b.1243)\\ Internet address is 10.0.21.1/24 Vlan31 is up, line protocol is down\\ Hardware is EtherSVI, address is 84eb.ef6b.1244 (bia 84eb.ef6b.1244)\\ Internet address is 10.0.31.1/24 Vlan41 is up, line protocol is down\\ Hardware is EtherSVI, address is 84eb.ef6b.1245 (bia 84eb.ef6b.1245)\\ Internet address is 10.0.41.1/24 Vlan51 is up, line protocol is down\\ Hardware is EtherSVI, address is 84eb.ef6b.1246 (bia 84eb.ef6b.1246)\\ Internet address is 10.0.51.1/24 Vlan61 is up, line protocol is down\\ Hardware is EtherSVI, address is 84eb.ef6b.1247 (bia 84eb.ef6b.1247)\\ Internet address is 10.0.61.1/24 FastEthernet0 is administratively down, line protocol is down\\ Hardware is APM86XXX FastEthernet, address is 84eb.ef6b.1239 (bia 84eb.ef6b.1239) GigabitEthernet1/0/1 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1201 (bia 84eb.ef6b.1201) GigabitEthernet1/0/2 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1202 (bia 84eb.ef6b.1202) GigabitEthernet1/0/3 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1203 (bia 84eb.ef6b.1203) GigabitEthernet1/0/4 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1204 (bia 84eb.ef6b.1204) GigabitEthernet1/0/5 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1205 (bia 84eb.ef6b.1205) GigabitEthernet1/0/6 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1206 (bia 84eb.ef6b.1206) GigabitEthernet1/0/7 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1207 (bia 84eb.ef6b.1207)\\ GigabitEthernet1/0/8 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1208 (bia 84eb.ef6b.1208) GigabitEthernet1/0/9 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1209 (bia 84eb.ef6b.1209)\\ GigabitEthernet1/0/10 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.120a (bia 84eb.ef6b.120a) GigabitEthernet1/0/11 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.120b (bia 84eb.ef6b.120b)\\ GigabitEthernet1/0/12 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.120c (bia 84eb.ef6b.120c) GigabitEthernet1/0/13 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.120d (bia 84eb.ef6b.120d)\\ GigabitEthernet1/0/14 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.120e (bia 84eb.ef6b.120e) GigabitEthernet1/0/15 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.120f (bia 84eb.ef6b.120f) GigabitEthernet1/0/16 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1210 (bia 84eb.ef6b.1210) GigabitEthernet1/0/17 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1211 (bia 84eb.ef6b.1211) GigabitEthernet1/0/18 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1212 (bia 84eb.ef6b.1212) GigabitEthernet1/0/19 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1213 (bia 84eb.ef6b.1213) GigabitEthernet1/0/20 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1214 (bia 84eb.ef6b.1214) GigabitEthernet1/0/21 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1215 (bia 84eb.ef6b.1215) GigabitEthernet1/0/22 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1216 (bia 84eb.ef6b.1216) GigabitEthernet1/0/23 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1217 (bia 84eb.ef6b.1217) GigabitEthernet1/0/24 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1218 (bia 84eb.ef6b.1218) GigabitEthernet1/0/25 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1219 (bia 84eb.ef6b.1219) GigabitEthernet1/0/26 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.121a (bia 84eb.ef6b.121a) GigabitEthernet1/0/27 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.121b (bia 84eb.ef6b.121b) GigabitEthernet1/0/28 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.121c (bia 84eb.ef6b.121c) GigabitEthernet1/0/29 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.121d (bia 84eb.ef6b.121d) GigabitEthernet1/0/30 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.121e (bia 84eb.ef6b.121e) GigabitEthernet1/0/31 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.121f (bia 84eb.ef6b.121f) GigabitEthernet1/0/32 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1220 (bia 84eb.ef6b.1220) GigabitEthernet1/0/33 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1221 (bia 84eb.ef6b.1221) GigabitEthernet1/0/34 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1222 (bia 84eb.ef6b.1222) GigabitEthernet1/0/35 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1223 (bia 84eb.ef6b.1223) GigabitEthernet1/0/36 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1224 (bia 84eb.ef6b.1224) GigabitEthernet1/0/37 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1225 (bia 84eb.ef6b.1225) GigabitEthernet1/0/38 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1226 (bia 84eb.ef6b.1226) GigabitEthernet1/0/39 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1227 (bia 84eb.ef6b.1227) GigabitEthernet1/0/40 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1228 (bia 84eb.ef6b.1228) GigabitEthernet1/0/41 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1229 (bia 84eb.ef6b.1229) GigabitEthernet1/0/42 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.122a (bia 84eb.ef6b.122a) GigabitEthernet1/0/43 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.122b (bia 84eb.ef6b.122b) GigabitEthernet1/0/44 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.122c (bia 84eb.ef6b.122c) GigabitEthernet1/0/45 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.122d (bia 84eb.ef6b.122d) GigabitEthernet1/0/46 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.122e (bia 84eb.ef6b.122e) GigabitEthernet1/0/47 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.122f (bia 84eb.ef6b.122f) GigabitEthernet1/0/48 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1230 (bia 84eb.ef6b.1230) GigabitEthernet1/0/49 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1231 (bia 84eb.ef6b.1231) GigabitEthernet1/0/50 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1232 (bia 84eb.ef6b.1232) TenGigabitEthernet1/0/1 is down, line protocol is down (notconnect)\\ Hardware is Ten Gigabit Ethernet, address is 84eb.ef6b.1233 (bia 84eb.ef6b.1233) TenGigabitEthernet1/0/2 is down, line protocol is down (notconnect)\\ Hardware is Ten Gigabit Ethernet, address is 84eb.ef6b.1234 (bia 84eb.ef6b.1234)","title":"IP and MAC Addresses of Cisco Switch"},{"location":"Networking%20Setup/CDG%20Network%20Info/Cisco%20Switch%20IP%20and%20MAC%20Addresses/#ip-and-mac-addresses-of-cisco-switch","text":"switch1#sh int | i (.* line protocol is )|(.* address is)\\ Vlan1 is up, line protocol is down\\ Hardware is EtherSVI, address is 84eb.ef6b.1240 (bia 84eb.ef6b.1240)\\ Internet address is 192.168.100.1/24 Vlan2 is up, line protocol is down\\ Hardware is EtherSVI, address is 84eb.ef6b.1241 (bia 84eb.ef6b.1241) Vlan11 is up, line protocol is down\\ Hardware is EtherSVI, address is 84eb.ef6b.1242 (bia 84eb.ef6b.1242)\\ Internet address is 10.0.11.1/24 Vlan21 is up, line protocol is down\\ Hardware is EtherSVI, address is 84eb.ef6b.1243 (bia 84eb.ef6b.1243)\\ Internet address is 10.0.21.1/24 Vlan31 is up, line protocol is down\\ Hardware is EtherSVI, address is 84eb.ef6b.1244 (bia 84eb.ef6b.1244)\\ Internet address is 10.0.31.1/24 Vlan41 is up, line protocol is down\\ Hardware is EtherSVI, address is 84eb.ef6b.1245 (bia 84eb.ef6b.1245)\\ Internet address is 10.0.41.1/24 Vlan51 is up, line protocol is down\\ Hardware is EtherSVI, address is 84eb.ef6b.1246 (bia 84eb.ef6b.1246)\\ Internet address is 10.0.51.1/24 Vlan61 is up, line protocol is down\\ Hardware is EtherSVI, address is 84eb.ef6b.1247 (bia 84eb.ef6b.1247)\\ Internet address is 10.0.61.1/24 FastEthernet0 is administratively down, line protocol is down\\ Hardware is APM86XXX FastEthernet, address is 84eb.ef6b.1239 (bia 84eb.ef6b.1239) GigabitEthernet1/0/1 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1201 (bia 84eb.ef6b.1201) GigabitEthernet1/0/2 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1202 (bia 84eb.ef6b.1202) GigabitEthernet1/0/3 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1203 (bia 84eb.ef6b.1203) GigabitEthernet1/0/4 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1204 (bia 84eb.ef6b.1204) GigabitEthernet1/0/5 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1205 (bia 84eb.ef6b.1205) GigabitEthernet1/0/6 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1206 (bia 84eb.ef6b.1206) GigabitEthernet1/0/7 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1207 (bia 84eb.ef6b.1207)\\ GigabitEthernet1/0/8 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1208 (bia 84eb.ef6b.1208) GigabitEthernet1/0/9 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1209 (bia 84eb.ef6b.1209)\\ GigabitEthernet1/0/10 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.120a (bia 84eb.ef6b.120a) GigabitEthernet1/0/11 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.120b (bia 84eb.ef6b.120b)\\ GigabitEthernet1/0/12 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.120c (bia 84eb.ef6b.120c) GigabitEthernet1/0/13 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.120d (bia 84eb.ef6b.120d)\\ GigabitEthernet1/0/14 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.120e (bia 84eb.ef6b.120e) GigabitEthernet1/0/15 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.120f (bia 84eb.ef6b.120f) GigabitEthernet1/0/16 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1210 (bia 84eb.ef6b.1210) GigabitEthernet1/0/17 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1211 (bia 84eb.ef6b.1211) GigabitEthernet1/0/18 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1212 (bia 84eb.ef6b.1212) GigabitEthernet1/0/19 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1213 (bia 84eb.ef6b.1213) GigabitEthernet1/0/20 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1214 (bia 84eb.ef6b.1214) GigabitEthernet1/0/21 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1215 (bia 84eb.ef6b.1215) GigabitEthernet1/0/22 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1216 (bia 84eb.ef6b.1216) GigabitEthernet1/0/23 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1217 (bia 84eb.ef6b.1217) GigabitEthernet1/0/24 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1218 (bia 84eb.ef6b.1218) GigabitEthernet1/0/25 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1219 (bia 84eb.ef6b.1219) GigabitEthernet1/0/26 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.121a (bia 84eb.ef6b.121a) GigabitEthernet1/0/27 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.121b (bia 84eb.ef6b.121b) GigabitEthernet1/0/28 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.121c (bia 84eb.ef6b.121c) GigabitEthernet1/0/29 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.121d (bia 84eb.ef6b.121d) GigabitEthernet1/0/30 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.121e (bia 84eb.ef6b.121e) GigabitEthernet1/0/31 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.121f (bia 84eb.ef6b.121f) GigabitEthernet1/0/32 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1220 (bia 84eb.ef6b.1220) GigabitEthernet1/0/33 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1221 (bia 84eb.ef6b.1221) GigabitEthernet1/0/34 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1222 (bia 84eb.ef6b.1222) GigabitEthernet1/0/35 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1223 (bia 84eb.ef6b.1223) GigabitEthernet1/0/36 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1224 (bia 84eb.ef6b.1224) GigabitEthernet1/0/37 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1225 (bia 84eb.ef6b.1225) GigabitEthernet1/0/38 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1226 (bia 84eb.ef6b.1226) GigabitEthernet1/0/39 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1227 (bia 84eb.ef6b.1227) GigabitEthernet1/0/40 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1228 (bia 84eb.ef6b.1228) GigabitEthernet1/0/41 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1229 (bia 84eb.ef6b.1229) GigabitEthernet1/0/42 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.122a (bia 84eb.ef6b.122a) GigabitEthernet1/0/43 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.122b (bia 84eb.ef6b.122b) GigabitEthernet1/0/44 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.122c (bia 84eb.ef6b.122c) GigabitEthernet1/0/45 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.122d (bia 84eb.ef6b.122d) GigabitEthernet1/0/46 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.122e (bia 84eb.ef6b.122e) GigabitEthernet1/0/47 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.122f (bia 84eb.ef6b.122f) GigabitEthernet1/0/48 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1230 (bia 84eb.ef6b.1230) GigabitEthernet1/0/49 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1231 (bia 84eb.ef6b.1231) GigabitEthernet1/0/50 is down, line protocol is down (notconnect)\\ Hardware is Gigabit Ethernet, address is 84eb.ef6b.1232 (bia 84eb.ef6b.1232) TenGigabitEthernet1/0/1 is down, line protocol is down (notconnect)\\ Hardware is Ten Gigabit Ethernet, address is 84eb.ef6b.1233 (bia 84eb.ef6b.1233) TenGigabitEthernet1/0/2 is down, line protocol is down (notconnect)\\ Hardware is Ten Gigabit Ethernet, address is 84eb.ef6b.1234 (bia 84eb.ef6b.1234)","title":"IP and MAC Addresses of Cisco Switch"},{"location":"Networking%20Setup/CDG%20Network%20Info/Dell%20Server%20MAC%20Addresses/","text":"MAC Addresses PowerEdge 710 710A eno1: 78:2b:cb:43:c8:fb eno2: 78:2b:cb:43:c8:fd eno3: 78:2b:cb:43:c8:ff eno4: 78:2b:cb:43:c9:01 iDRAC6 Mac Address: 78:2B:CB:43:C9:03 PowerEdge710 710B eno1: 78:2b:cb:3c:61:75 eno2: 78:2b:cb:3c:71:77 eno3: 78:2b:cb:3c:61:79 eno4: 78:2b:cb:3c:61:7b iDRAC6 Mac Address: 78:2B:CB:3C:61:7D (Lan Parameters) PowerEdge R730 730 eno1: f8:bc:12:55:d4:a8 eno2: f8:bc:12:55:d4:a9 eno3: f8:bc:12:55:d4:aa eno4: f8:bc:12:55:d4:ab iDRAC Mac Address: B0:83:FE:E8:F3:BE","title":"MAC Addresses"},{"location":"Networking%20Setup/CDG%20Network%20Info/Dell%20Server%20MAC%20Addresses/#mac-addresses","text":"","title":"MAC Addresses"},{"location":"Networking%20Setup/CDG%20Network%20Info/Dell%20Server%20MAC%20Addresses/#poweredge-710","text":"710A eno1: 78:2b:cb:43:c8:fb eno2: 78:2b:cb:43:c8:fd eno3: 78:2b:cb:43:c8:ff eno4: 78:2b:cb:43:c9:01 iDRAC6 Mac Address: 78:2B:CB:43:C9:03","title":"PowerEdge 710"},{"location":"Networking%20Setup/CDG%20Network%20Info/Dell%20Server%20MAC%20Addresses/#poweredge710","text":"710B eno1: 78:2b:cb:3c:61:75 eno2: 78:2b:cb:3c:71:77 eno3: 78:2b:cb:3c:61:79 eno4: 78:2b:cb:3c:61:7b iDRAC6 Mac Address: 78:2B:CB:3C:61:7D (Lan Parameters)","title":"PowerEdge710"},{"location":"Networking%20Setup/CDG%20Network%20Info/Dell%20Server%20MAC%20Addresses/#poweredge-r730","text":"730 eno1: f8:bc:12:55:d4:a8 eno2: f8:bc:12:55:d4:a9 eno3: f8:bc:12:55:d4:aa eno4: f8:bc:12:55:d4:ab iDRAC Mac Address: B0:83:FE:E8:F3:BE","title":"PowerEdge R730"},{"location":"Server%20Operating%20System/KVM%20Installation/","text":"Installing KVM R710 & 730 We followed the link to install the KVM for the servers. link After initializing one of the configurations, the KVM was erased on one of the servers, so we had to reinstall. There was nothing different that we did while installing the KVM's to the servers.","title":"Installing KVM R710 &amp; 730"},{"location":"Server%20Operating%20System/KVM%20Installation/#installing-kvm-r710-730","text":"We followed the link to install the KVM for the servers. link After initializing one of the configurations, the KVM was erased on one of the servers, so we had to reinstall. There was nothing different that we did while installing the KVM's to the servers.","title":"Installing KVM R710 &amp; 730"},{"location":"Server%20Operating%20System/Operating%20System%20Installation/","text":"Introduction This document is a set of instructions for installing operating systems on the servers. For our primary operating system, we're using Ubuntu Server 24.04.01 LTS. Ubuntu Server was selected over Windows server because it's an industry standard free and open-source OS for servers. Alternative operating systems included RHEL and SUSE Server; Ubuntu beat these due to widespread usage and personal familiarity. Requirements USB flash drive, at least 16 GB Server able to boot to BIOS and connect to Internet via wired connection Downloads Ubuntu Server 24.04.01 LTS ISO https://ubuntu.com/download/server Ventoy 1.1.00 LiveCD ISO and Executable https://github.com/ventoy/Ventoy/releases/tag/v1.1.00 Linux tarball or Windows zip Instructions Ensure that there is no important data on your flash drive or > server storage drives! Place all the downloaded files into the same directory. Install Ventoy on your flash drive: a. On Linux: i. Open VentoyGUI.x86\\_64 to open the GUI ii. Select your flash drive under Device iii. Click Install b. On Windows i. Run Ventoy2Disk.exe ii. Select your flash drive under Device iii. Click Install Transfer the Ubuntu Server ISO to the flash drive from your file explorer. Eject flash drive from your PC. Shut server off. Plug in flash drive. Connect the server to the network by plugging an Ethernet cable into > its network port 1 and the wall jack. Ensure that the Ethernet > cable is not in the iDRAC port. Boot server. Press F11 repeatedly to access the BIOS Boot Manager. In the BIOS Boot Manager, select the flash drive. It may be under Hard Drives. Boot into the flash drive. When Ventoy opens, select Ubuntu Server (or your desired ISO). Boot into normal mode, not GRUB mode, if asked. You should now be in the Ubuntu Server setup wizard! Navigate the wizard using your arrow keys, Enter, and Space. Select your language and keyboard layout. Choose the type of installation. We're using the default: Ubuntu Server. Network configuration: a. We have four network ports but will only be using the first one for now. b. Navigate to DHCP4, hit Enter, and select Automatic (DHCP). c. Navigate to DHCP6, hit Enter, and select Automatic (DHCP). d. The server should automatically be assigned IP addresses. We are not using a Proxy server. Mirror test: a. let the server check the Ubuntu package index, then select Done. b. We are not using an alternative mirror. Guided storage configuration: a. Select Use an entire disk. b. Select Set up this disk as an LVM group. c. Select Encrypt the LVM group with LUKS. i. Enter and confirm the passphrase. ii. Select Also create a recovery key. d. Select Done. e. Look over the File System Summary. Used Devices should have your main storage drive with partitions filling its space. Create a user account: a. Provide a name -- we\\'re using Cloudgineers. b. Provide the server's name -- probably R730, R710a, or R710b. c. Pick a username -- we\\'re using cloudadmin. d. Enter and confirm a password. We used 0990. Don't enable Ubuntu Pro. Install OpenSSH if you want. We skipped this. Install any of the packages if you want. We only installed Kubernetes. Let the installer complete the process, then reboot. You should now be able to log in with the username and password you provided. Addendum Linux is the family of operating systems which run on the Linux kernel. The Linux kernel is a low-level piece of the operating system which manages interactions between the applications and the hardware. Linux distributions are full-fledged operating systems based on the Linux kernel. Some of the major Linux distributions are Debian, Ubuntu, Fedora Linux, Arch Linux, Red Hat Linux, and openSUSE. Each has a different development philosophy and serves a slightly different purpose. Many distributions are based on one of the above distributions. Ubuntu is itself based on Debian. Debian emphasizes stability, security, and free software. Ubuntu builds upon Debian with an aim for regular releases, consistent user experiences, and support on both desktops and servers. As one of the most popular Linux distributions, Ubuntu is very well-documented and easy to research. But other distributions are worth investigating as well. Puppy Linux is a very light-weight distribution which is great for using as a Live USB. A Live USB is a full operating system that can boot from a flash drive. This is very useful for investigating and repairing computers. OpenSUSE and Red Hat Linux are the bases of the server distributions we almost used. Pop!_OS is an Ubuntu-based distribution that I've been using daily since 2021. It's excellent for out-of-the-box functionality, and they're currently creating a brand-new desktop environment for the OS. See distrowatch.com for much more information about Linux and BSD distributions. I will also be happy to share more information on Linux if desired. References https://www.ventoy.net/en/doc_start.html https://documentation.ubuntu.com/server/tutorial/","title":"Introduction"},{"location":"Server%20Operating%20System/Operating%20System%20Installation/#introduction","text":"This document is a set of instructions for installing operating systems on the servers. For our primary operating system, we're using Ubuntu Server 24.04.01 LTS. Ubuntu Server was selected over Windows server because it's an industry standard free and open-source OS for servers. Alternative operating systems included RHEL and SUSE Server; Ubuntu beat these due to widespread usage and personal familiarity.","title":"Introduction"},{"location":"Server%20Operating%20System/Operating%20System%20Installation/#requirements","text":"USB flash drive, at least 16 GB Server able to boot to BIOS and connect to Internet via wired connection","title":"Requirements"},{"location":"Server%20Operating%20System/Operating%20System%20Installation/#downloads","text":"Ubuntu Server 24.04.01 LTS ISO https://ubuntu.com/download/server Ventoy 1.1.00 LiveCD ISO and Executable https://github.com/ventoy/Ventoy/releases/tag/v1.1.00 Linux tarball or Windows zip","title":"Downloads"},{"location":"Server%20Operating%20System/Operating%20System%20Installation/#instructions","text":"Ensure that there is no important data on your flash drive or > server storage drives! Place all the downloaded files into the same directory. Install Ventoy on your flash drive: a. On Linux: i. Open VentoyGUI.x86\\_64 to open the GUI ii. Select your flash drive under Device iii. Click Install b. On Windows i. Run Ventoy2Disk.exe ii. Select your flash drive under Device iii. Click Install Transfer the Ubuntu Server ISO to the flash drive from your file explorer. Eject flash drive from your PC. Shut server off. Plug in flash drive. Connect the server to the network by plugging an Ethernet cable into > its network port 1 and the wall jack. Ensure that the Ethernet > cable is not in the iDRAC port. Boot server. Press F11 repeatedly to access the BIOS Boot Manager. In the BIOS Boot Manager, select the flash drive. It may be under Hard Drives. Boot into the flash drive. When Ventoy opens, select Ubuntu Server (or your desired ISO). Boot into normal mode, not GRUB mode, if asked. You should now be in the Ubuntu Server setup wizard! Navigate the wizard using your arrow keys, Enter, and Space. Select your language and keyboard layout. Choose the type of installation. We're using the default: Ubuntu Server. Network configuration: a. We have four network ports but will only be using the first one for now. b. Navigate to DHCP4, hit Enter, and select Automatic (DHCP). c. Navigate to DHCP6, hit Enter, and select Automatic (DHCP). d. The server should automatically be assigned IP addresses. We are not using a Proxy server. Mirror test: a. let the server check the Ubuntu package index, then select Done. b. We are not using an alternative mirror. Guided storage configuration: a. Select Use an entire disk. b. Select Set up this disk as an LVM group. c. Select Encrypt the LVM group with LUKS. i. Enter and confirm the passphrase. ii. Select Also create a recovery key. d. Select Done. e. Look over the File System Summary. Used Devices should have your main storage drive with partitions filling its space. Create a user account: a. Provide a name -- we\\'re using Cloudgineers. b. Provide the server's name -- probably R730, R710a, or R710b. c. Pick a username -- we\\'re using cloudadmin. d. Enter and confirm a password. We used 0990. Don't enable Ubuntu Pro. Install OpenSSH if you want. We skipped this. Install any of the packages if you want. We only installed Kubernetes. Let the installer complete the process, then reboot. You should now be able to log in with the username and password you provided.","title":"Instructions"},{"location":"Server%20Operating%20System/Operating%20System%20Installation/#addendum","text":"Linux is the family of operating systems which run on the Linux kernel. The Linux kernel is a low-level piece of the operating system which manages interactions between the applications and the hardware. Linux distributions are full-fledged operating systems based on the Linux kernel. Some of the major Linux distributions are Debian, Ubuntu, Fedora Linux, Arch Linux, Red Hat Linux, and openSUSE. Each has a different development philosophy and serves a slightly different purpose. Many distributions are based on one of the above distributions. Ubuntu is itself based on Debian. Debian emphasizes stability, security, and free software. Ubuntu builds upon Debian with an aim for regular releases, consistent user experiences, and support on both desktops and servers. As one of the most popular Linux distributions, Ubuntu is very well-documented and easy to research. But other distributions are worth investigating as well. Puppy Linux is a very light-weight distribution which is great for using as a Live USB. A Live USB is a full operating system that can boot from a flash drive. This is very useful for investigating and repairing computers. OpenSUSE and Red Hat Linux are the bases of the server distributions we almost used. Pop!_OS is an Ubuntu-based distribution that I've been using daily since 2021. It's excellent for out-of-the-box functionality, and they're currently creating a brand-new desktop environment for the OS. See distrowatch.com for much more information about Linux and BSD distributions. I will also be happy to share more information on Linux if desired.","title":"Addendum"},{"location":"Server%20Operating%20System/Operating%20System%20Installation/#references","text":"https://www.ventoy.net/en/doc_start.html https://documentation.ubuntu.com/server/tutorial/","title":"References"},{"location":"Server%20Operating%20System/SSH/","text":"SSH Installation SSH which stands for S ecure SH ell protocol, is a way to remotely access Linux machines, encrypted for security. OpenSSH is installed on Ubuntu Server by default. We just needed to configure the addresses. Linux In order to install OpenSSH in the event it is not already installed, use the following command: sudo apt install openssh-client openssh-server The SSH IPs for the servers are as follows:\\ R710A: 10.8.118.19 R710B: 10.8.124.203 R730: 10.8.117.254 To connect remotely from another device, ensure OpenSSH is installed and type the following command: ssh cloudadmin@[SERVER IP] yes {password} You will now be connected. To quit an SSH connection, type exit Press Enter. Note: When attempting to shutdown or reboot from SSH, sudo is required. The addresses will change, please refer to the Networking guide afterwards","title":"SSH Installation"},{"location":"Server%20Operating%20System/SSH/#ssh-installation","text":"SSH which stands for S ecure SH ell protocol, is a way to remotely access Linux machines, encrypted for security. OpenSSH is installed on Ubuntu Server by default. We just needed to configure the addresses.","title":"SSH Installation"},{"location":"Server%20Operating%20System/SSH/#linux","text":"In order to install OpenSSH in the event it is not already installed, use the following command: sudo apt install openssh-client openssh-server The SSH IPs for the servers are as follows:\\ R710A: 10.8.118.19 R710B: 10.8.124.203 R730: 10.8.117.254 To connect remotely from another device, ensure OpenSSH is installed and type the following command: ssh cloudadmin@[SERVER IP] yes {password} You will now be connected. To quit an SSH connection, type exit Press Enter. Note: When attempting to shutdown or reboot from SSH, sudo is required. The addresses will change, please refer to the Networking guide afterwards","title":"Linux"},{"location":"Server%20Setup/PowerRack%20Wiring/","text":"Power Edge Wiring Configuration PR710 PR710 Owners Manual Pages 19-20 Port 5/6 - Power Suppy. E161C and E1620 may appear as a System message. Please consult owners manual Table 1-1 System Status Messages. Port 11 - Mouse & Keyboard Port 12 - VGA Display. Port 14 - iDRAC ethernet port, this will need to be connect to the LAN port. For more information on iDRAC, read the following document. iDRAC Port: Elevate Your Server Management with Seamless Remote Access PR730 PR730 Owners Manual Pages 15-16","title":"Power Edge Wiring Configuration"},{"location":"Server%20Setup/PowerRack%20Wiring/#power-edge-wiring-configuration","text":"","title":"Power Edge Wiring Configuration"},{"location":"Server%20Setup/PowerRack%20Wiring/#pr710","text":"PR710 Owners Manual Pages 19-20 Port 5/6 - Power Suppy. E161C and E1620 may appear as a System message. Please consult owners manual Table 1-1 System Status Messages. Port 11 - Mouse & Keyboard Port 12 - VGA Display. Port 14 - iDRAC ethernet port, this will need to be connect to the LAN port. For more information on iDRAC, read the following document. iDRAC Port: Elevate Your Server Management with Seamless Remote Access","title":"PR710"},{"location":"Server%20Setup/PowerRack%20Wiring/#pr730","text":"PR730 Owners Manual Pages 15-16","title":"PR730"},{"location":"Server%20Setup/RAID%20Config/","text":"Configuring RAID Video for this Configuration I thought I needed to initialize for PowerEdge 710B. I had to go to system setup and change the boot sequence to select just the Integrated RAID option. I am having an issue with Linux not coming up after the initializing of RAID. Conclusion: When you initialize the RAID, then you have to upload Ubuntu and KVM again. This took awhile. The RAID is already configured on the servers. RAID levels explained in this link RAID levels comparison chart link RAID Real World Performance link We can configure the RAID using function F10 instead of control R. F2: I changed the boot sequence to: Hard Drive, Embedded, then SATA -- to change the boot order you just press the minus or plus key on the keyboard to move the order around. I pressed F2 in BIOS configuration and selected check consistency to verify and correct parity or mirror for fault tolerance on virtual disk. It is recommended by dell.com link (performed every 30 days) The consistency takes a while but is recommended every 30 days, so it is done for the R710b.","title":"Configuring RAID"},{"location":"Server%20Setup/RAID%20Config/#configuring-raid","text":"Video for this Configuration I thought I needed to initialize for PowerEdge 710B. I had to go to system setup and change the boot sequence to select just the Integrated RAID option. I am having an issue with Linux not coming up after the initializing of RAID. Conclusion: When you initialize the RAID, then you have to upload Ubuntu and KVM again. This took awhile. The RAID is already configured on the servers. RAID levels explained in this link RAID levels comparison chart link RAID Real World Performance link We can configure the RAID using function F10 instead of control R. F2: I changed the boot sequence to: Hard Drive, Embedded, then SATA -- to change the boot order you just press the minus or plus key on the keyboard to move the order around. I pressed F2 in BIOS configuration and selected check consistency to verify and correct parity or mirror for fault tolerance on virtual disk. It is recommended by dell.com link (performed every 30 days) The consistency takes a while but is recommended every 30 days, so it is done for the R710b.","title":"Configuring RAID"},{"location":"Server%20Setup/kolla-anisble%20doc/","text":"Kolla-Ansible web page for step by step instructions on how to install. Python is a prerequisite and installation is also on this web page. Quick Start for deployment/evaluation --- kolla-ansible 19.1.0.dev268 documentation We stopped on Install Ansible Galaxy Requirements: kolla-ansible install-deps The csu network is not allowing access to the galaxy.ansible.com network but it accessible through another hotspot or network. cd venv -- name of virtual machine","title":"Kolla anisble doc"},{"location":"Server%20iDRAC/Adjusting%20iDRAC6%20basic%20config/","text":"iDRAC6 Verification of Existence and that the settings were correct. All servers (2- 710's & 1- 730) previously had iDRAC6 downloaded. We did have to set the appropriate IP addresses, subnet mask, & gateway details while in static IP address. After this was completed, we set the IP back to DHCP. We also set up a password for accessing iDRAC for remote access. After the changes were made, we rebooted the servers to save changes made in iDRAC configurations. We have more components that will be worked on in following stories as we look at setting up all the basic aspects of iDRAC6. Documentation of iDRAC configuration for PowerEdge 710 & 730: Steps needed to configure iDRAC: Boot the server and press control+E <!-- --> Navigated to network settings and choose static IP address <!-- --> Set the appropriate IP <!-- --> subnet mask <!-- --> gateway details, <!-- --> Set it back to DHCP. <!-- --> Set password for accessing the iDRAC for remote access. <!-- --> cloudadmin <!-- --> Rebooted the servers to save changes made in iDRAC configuration. iDRAC configuration link","title":"Adjusting iDRAC6 basic config"},{"location":"Server%20iDRAC/IP%20Address%20Setup%20for%20R710/","text":"Authors: Jaden Jefferson Last Updated: Jan 30 2025 IP Address Setup for R710 This was done in Lifecycle Controller version 1.5. Read-only mode will be marked in a light-blue font color. On boot, click \\<Ctrl>-\\<E> iDRAC LAN On IPMI Over LAN On LAN Parameters NIC Selection Dedicated Active LOM No Active LOM MAC ADDRESS: Should be in read-only mode VLAN Enable Off VLAN 0001 VLAN Priority Priority 0 Register iDRAC Name On iDRAC Name : Should've be entered prior Domain Name from DHCP Off Domain Name: Will be given once Host Name String: Not inserted LAN Alert Enabled Off Alert Policy Entry 1 Disabled Alert Destination 1 0.0.0.0 IPv4 Settings IPv4 Enabled RMCP+ Encryption Key: Not inserted IPv4 Address Source: Static Must be static to insert Address, Subnet Mask, & Default Gateway. Once inserted, switch back to DHCP to turn DNS Servers from DHCP On DNS Server 1 & 2 : Read-only mode IPv6 Settings IPv6 Enabled IPv6 Address Source AutoConfig IPv6 Address 1: fd12:3456:789a:1::1 Prefix Length: 255 or 64 Default Gateway: f380::1 IPv6 Link-local Address: .fe80:b283:feff:fee8:f3be IPv6 Address 2: :: DNS Servers from DHCP On DNS Server 1 & 2: Read-only mode Advanced LAN Configurations Auto-Negotiate Enabled LAN Speed Setting 100Mbps LAN Duplex Setting Full Duplex Exit out of iDRAC6. On exit select: Save Changes and Exit. Re-boot and confirm Confirmation: Should see DNS Name on reboot in same location. On reboot screen, you should see IP Address and DHCP","title":"IP Address Setup for R710"},{"location":"Server%20iDRAC/IP%20Address%20Setup%20for%20R730/","text":"Authors: Jaden Jefferson Last Updated: Jan 30 2025 IP Address Setup for R730 This was done in Lifecycle Controller version 2.82.82.82. A step-by-step guide was found online at: PowerEdge: How to configure iDRAC9 and Lifecycle Controller network settings | Dell US\\ \\ For the IPv4 address, it'll ask to use insert your own. Can use the suggested info greyed out prior to inputting characters.\\ For the IPv6 address, it'll ask the same as IPv4. Can use a generic IP such as: Static IP Address 1: fd12:3456:789a:1::1 Static Prefix Length: 64 Static Gateway: f380::1 Link Local Address: fe80:b283:feff:fee8:f3be IP Address 2: :: As changes are made to initial setup following the guide they will be noted here: No changes made","title":"IP Address Setup for R730"},{"location":"Server%20iDRAC/iDRAC%20config/","text":"Documentation of iDRAC configuration for PowerEdge 710 & 730: Steps needed to configure iDRAC: Boot the server and press control+E Navigated to network settings and choose static IP address Set the appropriate IP <!-- --> subnet mask gateway details, Set it back to DHCP. <!-- --> Set password for accessing the iDRAC for remote access. cloudadmin Rebooted the servers to save changes made in iDRAC configuration. iDRAC configuration link Basic Installation of the iDRAC6 Document We set up some of the iDRAC configurations -- we still need to configure the network controller LAN parameters to use DHCP or a Static IP address source. RACADM (Remote Access Controller Administration Module) can be installed on a management station running Linux Pg 38, pgs. 39-40 to update iDRAC6 RACADM allows IT administrators to remotely manage and configure server hardware settings on Dell servers through iDRAC using a command line interface. This improves system administration efficiency and reduces downtime. Configuring a Supported Web Browser pgs. 41, 46-48 Configuring the iDRAC6 Network and IPMI LAN settings pgs. 49-55 Configuring IP Filtering and IP Blocking pgs. 55-57 Configuring Platform Events Traps pgs. 57-60 Configuring E-Mail Alerts pgs. 60-61 Next comes the Advanced iDRAC6 Config beginning on pg. 87 Instructions The virtual media function allows the remote usage of software image files (ISO files). ISO files can be used for installing operating systems or updating servers. This article provides information about using the virtual media function of the Integrated Dell Remote Access Controller (iDRAC) 6, 7, 8 and 9.\\ \\ Benefits of using the virtual media function are: Updating all server firmware using the matching bootable image (ISO file) for your server. Installing an operating system on your server directly from the ISO. Read [How to Install the Operating System on a Dell PowerEdge Server]{.underline} for more information. Viewing video output from the server and using the local mouse and keyboard as if you were in the same room. If you want to find more detailed information about this and other functions available through the Enterprise iDRAC, reference the [iDRAC manuals]{.underline} . Link PowerEdge iDRAC7 R730 link Virtual Media Function","title":"iDRAC config"},{"location":"Server%20iDRAC/iDRAC%20config/#instructions","text":"The virtual media function allows the remote usage of software image files (ISO files). ISO files can be used for installing operating systems or updating servers. This article provides information about using the virtual media function of the Integrated Dell Remote Access Controller (iDRAC) 6, 7, 8 and 9.\\ \\ Benefits of using the virtual media function are: Updating all server firmware using the matching bootable image (ISO file) for your server. Installing an operating system on your server directly from the ISO. Read [How to Install the Operating System on a Dell PowerEdge Server]{.underline} for more information. Viewing video output from the server and using the local mouse and keyboard as if you were in the same room. If you want to find more detailed information about this and other functions available through the Enterprise iDRAC, reference the [iDRAC manuals]{.underline} . Link PowerEdge iDRAC7 R730 link Virtual Media Function","title":"Instructions"},{"location":"System%20Architecture/Devstack%20vs%20Production/","text":"Devstack vs Production Devstack is a development environment Devstack is, by definition, a development environment. It is very manual and hands-on, requiring many things to be done by hand (such as instance creation, project allocation, and deployment). It is useful for implementing and testing with Devstack, but it should ideally be replaced by Kolla-Ansible or a similar other Openstack production environment as soon as possible when creating the final deliverable. Other Openstack environments such as Kolla-Ansible are much more automated and clean, made for a production environment and to be delivered to the customer/consumer. Devstack should be used as a development environment only- a sort of testing playground to experiment with Openstack, learn about its workings, and gain knowledge to be used in the actual production environment. It is not and should not be used as a final product or production environment.","title":"Devstack vs Production"},{"location":"System%20Architecture/Devstack%20vs%20Production/#devstack-vs-production","text":"","title":"Devstack vs Production"},{"location":"System%20Architecture/Devstack%20vs%20Production/#devstack-is-a-development-environment","text":"Devstack is, by definition, a development environment. It is very manual and hands-on, requiring many things to be done by hand (such as instance creation, project allocation, and deployment). It is useful for implementing and testing with Devstack, but it should ideally be replaced by Kolla-Ansible or a similar other Openstack production environment as soon as possible when creating the final deliverable. Other Openstack environments such as Kolla-Ansible are much more automated and clean, made for a production environment and to be delivered to the customer/consumer. Devstack should be used as a development environment only- a sort of testing playground to experiment with Openstack, learn about its workings, and gain knowledge to be used in the actual production environment. It is not and should not be used as a final product or production environment.","title":"Devstack is a development environment"},{"location":"System%20Architecture/Hardware%20Inventory/","text":"Hardware Inventory R710 A & B CPU: Intel Xeon 5630 @ 2.13Ghz RAM: 72Gb (18 sticks of 4Gb each) PSU: 2 750W power supplies Storage: 1.2 TB over 4 drives R710B serial number: 8CMS6S1 R710A serial number: 7TQ1TR1 R730 CPU: Intel Xeon E5-2660 @ 2.60GHz RAM: 384Gb (24 sticks of 16Gb each) PSU: 2 750W power supplies Storage: 32 TB over 8 drives Miscellaneous 3 HP monitors 2 HP keyboards 1 Dell 7142 42U Server Rack 1 Cisco Catalyst 2960-X Switch","title":"Hardware Inventory"},{"location":"System%20Architecture/Hardware%20Inventory/#hardware-inventory","text":"","title":"Hardware Inventory"},{"location":"System%20Architecture/Hardware%20Inventory/#r710-a-b","text":"CPU: Intel Xeon 5630 @ 2.13Ghz RAM: 72Gb (18 sticks of 4Gb each) PSU: 2 750W power supplies Storage: 1.2 TB over 4 drives R710B serial number: 8CMS6S1 R710A serial number: 7TQ1TR1","title":"R710 A &amp; B"},{"location":"System%20Architecture/Hardware%20Inventory/#r730","text":"CPU: Intel Xeon E5-2660 @ 2.60GHz RAM: 384Gb (24 sticks of 16Gb each) PSU: 2 750W power supplies Storage: 32 TB over 8 drives","title":"R730"},{"location":"System%20Architecture/Hardware%20Inventory/#miscellaneous","text":"3 HP monitors 2 HP keyboards 1 Dell 7142 42U Server Rack 1 Cisco Catalyst 2960-X Switch","title":"Miscellaneous"},{"location":"System%20Architecture/Logical%20Architecture/","text":"Logical Architecture To be completed","title":"Logical Architecture"},{"location":"System%20Architecture/Logical%20Architecture/#logical-architecture","text":"","title":"Logical Architecture"},{"location":"System%20Architecture/Logical%20Architecture/#to-be-completed","text":"","title":"To be completed"}]}